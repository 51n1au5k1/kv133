################################################################################
# /packages/room_bedroom.yaml
################################################################################
#
# Назначение:
#   Управление розетками для зарядки устройств и уведомления о низкой температуре
#   в спальне с использованием усреднённого значения.
#
################################################################################

sensor:
  # Сенсор для усреднённого значения температуры в спальне
  # sensor.temperatura_v_spalne_sglazhennaia
  - platform: filter
    name: "Температура в спальне (сглаженная)"
    entity_id: sensor.bedroom_th_sensor_temperature
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02" # Окно усреднения — 2 минуты
        precision: 2 # Округление до двух знаков после запятой

input_boolean:
  # --------------------------------------------------------------------------
  # Сенсор уведомлений о падении температуры
  # --------------------------------------------------------------------------
  bedroom_th_notice:
    name: "Спальня: Сенсор уведомлений о температуре"
    initial: false
    icon: mdi:bell-ring

automation:
  # ------------------------------------------------------------------------
  # ЭКОНОМИЯ ЭНЕРГИИ: ОТКЛЮЧЕНИЕ РОЗЕТКИ ПРИ ЗАРЯДКЕ НОЧЬЮ
  # ------------------------------------------------------------------------
  - id: "a658b6fc-d264-4c6b-8185-e3b503f5a7e5"
    alias: "Спальня: Отключение розетки при зарядке телефона Андрея ночью"
    description: >
      Отключение розетки для зарядки Google Pixel 8 PRO, чтобы предотвратить
      перезарядку и перегрев устройства ночью.
    trigger:
      - platform: numeric_state
        entity_id: sensor.pixel_8_pro_battery_level
        above: 99
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: sensor.pixel_8_pro_battery_state
        state: "charging"
      - condition: time
        after: "01:00:00"
        before: "07:00:00"
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.0x00158d0002530ba3
    mode: single

  - id: "3b13588c-5421-42a5-951b-a4d04d878041"
    alias: "Спальня: Отключение розетки при зарядке телефона Татьяны ночью"
    description: >
      Отключение розетки для зарядки iPhone, чтобы предотвратить
      перезарядку и перегрев устройства ночью.
    trigger:
      - platform: numeric_state
        entity_id: sensor.iphone_tatsiana_3_battery_level
        above: 99
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: sensor.iphone_tatsiana_3_battery_state
        state: "full"
      - condition: time
        after: "01:00:00"
        before: "07:00:00"
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.0x00158d0002530bd9
    mode: single

  # ----------------------------------------------------------------------------
  # Уведомление: Температура в спальне ниже 20° при открытой двери/окне
  # ----------------------------------------------------------------------------
  - id: "9f1229c2-0ce2-4483-9953-1f6cdc6fa18e"
    alias: "Уведомление о низкой температуре в спальне (усреднённое значение)"
    description: >
      Уведомление, если температура в спальне ниже 20° и открыта дверь/окно.
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperatura_v_spalne_sglazhennaia
        below: 20
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: binary_sensor.0x00158d00044d5d11_contact
        state: "on"
    action:
      - variables:
          telegram_message: "Температура в спальне ниже 20°. Динозавры любят тепло! Закройте балкон в спальне."
      - choose:
          # Условие: Если master дома, отправляем уведомление ему
          - conditions:
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - action: notify.master
                data:
                  message: "{{ telegram_message }}"
          # Условие: Если tatiana дома, отправляем уведомление ей
          - conditions:
              - condition: state
                entity_id: person.tatiana
                state: "home"
            sequence:
              - action: notify.tatiana
                data:
                  message: "{{ telegram_message }}"

      # Устанавливаем флаг, чтобы уведомление не отправлялось повторно
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.bedroom_th_notice

  # ----------------------------------------------------------------------------
  # Сброс уведомлений через заданное время (low_th_notification_reset_period)
  # ----------------------------------------------------------------------------
  - id: "fdf3d865-6bdb-4c9b-9acd-fa7f7dc432d6"
    alias: "HELPER: Сброс уведомлений о температуре в спальне"
    trigger:
      - platform: state
        entity_id: input_boolean.bedroom_th_notice
        to: "on"
    action:
      - delay: >
          00:{{ states('input_number.low_th_notification_reset_period') | int }}:00
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.bedroom_th_notice
