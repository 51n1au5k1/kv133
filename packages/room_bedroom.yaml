################################################################################
# /packages/room_bedroom.yaml
################################################################################
#
# Назначение:
#   Управление розетками для зарядки устройств и уведомления о низкой температуре
#   в спальне с использованием усреднённого значения.
#
# Доработки:
#   - Добавлен гистерезис (for: в триггерах) для стабильности.
#   - Использование таймера для сброса флага (гибче delay).
#   - Добавлены silent_mode/system_startup_phase во все автоматизации.
#   - TTS в уведомлении (опционально, из yandex_helper.yaml).
#   - Логирование и проверки на someone_is_home/unavailable.
#
################################################################################

sensor:
  # Сенсор для усреднённого значения температуры в спальне
  - platform: filter
    name: "Температура в спальне (сглаженная)"
    entity_id: sensor.bedroom_th_sensor_temperature
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02"
        precision: 2

input_boolean:
  bedroom_th_notice:
    name: "Спальня: Сенсор уведомлений о температуре"
    initial: false
    icon: mdi:bell-ring

timer:
  bedroom_th_notice_reset:
    name: "Сброс уведомления о температуре в спальне"
    duration: "00:20:00" # Базовое; при старте можно переопределять

automation:
  # ------------------------------------------------------------------------
  # ЭКОНОМИЯ ЭНЕРГИИ: ОТКЛЮЧЕНИЕ РОЗЕТКИ ПРИ ЗАРЯДКЕ НОЧЬЮ
  # ------------------------------------------------------------------------
  - id: "a658b6fc-d264-4c6b-8185-e3b503f5a7e5"
    alias: "Спальня: Отключение розетки при зарядке телефона Андрея ночью"
    description: >
      Отключение розетки для зарядки Google Pixel 8 PRO, чтобы предотвратить
      перезарядку и перегрев устройства ночью.
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.pixel_8_pro_battery_level
        above: 99
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: sensor.pixel_8_pro_battery_state
        state: "charging"
      - condition: time
        after: "01:00:00"
        before: "07:00:00"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: >-
          {{ states('sensor.pixel_8_pro_battery_level') not in ['unknown', 'unavailable'] }}
      - condition: state
        entity_id: switch.0x00158d0002530ba3
        state: "on"
    action:
      - service: switch.turn_off
        target:
          entity_id: switch.0x00158d0002530ba3
      - service: system_log.write
        data:
          message: "Розетка зарядки отключена ночью (уровень: {{ states('sensor.pixel_8_pro_battery_level') }}%)."
          level: info

  # ----------------------------------------------------------------------------
  # Уведомление: Температура в спальне ниже 20° при открытой двери/окне
  # ----------------------------------------------------------------------------
  - id: "9f1229c2-0ce2-4483-9953-1f6cdc6fa18e"
    alias: "Уведомление о низкой температуре в спальне (усреднённое значение)"
    description: >
      Уведомление, если температура в спальне ниже 20° и открыта дверь/окно.
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperatura_v_spalne_sglazhennaia
        below: 20
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - condition: state
        entity_id: binary_sensor.0x00158d00044d5d11_contact
        state: "on"
      - condition: state
        entity_id: binary_sensor.someone_is_home
        state: "on"
      - condition: template
        value_template: >-
          {{ states('sensor.temperatura_v_spalne_sglazhennaia') not in ['unknown', 'unavailable'] }}
      - condition: state
        entity_id: input_boolean.bedroom_th_notice
        state: "off"
    action:
      - variables:
          message: "Температура в спальне ниже 20°. Динозавры любят тепло! Закройте балкон в спальне."
      - choose:
          - conditions:
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: notify.master
                data:
                  message: "{{ message }}"
              - service: script.yandex_tts_temp_status
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.bedroom_th_notice
      - service: timer.start
        target:
          entity_id: timer.bedroom_th_notice_reset
        data:
          duration: "00:{{ states('input_number.low_th_notification_reset_period') | int }}:00"
      - service: system_log.write
        data:
          message: "Уведомление о низкой температуре в спальне отправлено ({{ states('sensor.temperatura_v_spalne_sglazhennaia') }}°)."
          level: info

  # ----------------------------------------------------------------------------
  # Сброс уведомлений по таймеру
  # ----------------------------------------------------------------------------
  - id: "fdf3d865-6bdb-4c9b-9acd-fa7f7dc432d6"
    alias: "HELPER: Сброс уведомлений о температуре в спальне"
    mode: single
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.bedroom_th_notice_reset
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.bedroom_th_notice
      - service: system_log.write
        data:
          message: "Флаг уведомления о температуре в спальне сброшен."
          level: info
