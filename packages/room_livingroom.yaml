################################################################################
# /packages/room_livingroom.yaml
################################################################################
#
# Назначение:
#   Данный пакет Home Assistant предназначен для управления:
#     - Освещением: бра, свет в зоне дивана, люстрой;
#     - Климатическими устройствами: кондиционер, очиститель воздуха, увлажнитель;
#     - Проветриванием на основе уровня CO2.
#
# Автоматизации позволяют:
#   • Управлять освещением с помощью сценического выключателя:
#     - Бра: одиночное нажатие кнопки 4;
#     - Люстра: одиночное нажатие кнопки 3;
#     - Свет в зоне дивана: двойное нажатие кнопки 4.
#   • Контролировать климатические устройства:
#     - Отключать устройства при открытии двери на балкон (дольше 1 минуты);
#     - Восстанавливать их состояние при закрытии двери, сохраняя предыдущее состояние.
#   • Управлять проветриванием на основе уровня CO2:
#     - Автоматически включать состояние "нуждается в проветривании", если CO2 выше жёсткого порога;
#     - Считать проветривание завершённым, если CO2 опустился ниже мягкого порога.
#   • Отправлять уведомления:
#     - Необходимость проветривания и завершение проветривания (через Яндекс.Станцию и Телеграм);
#     - Замена фильтра кондиционера (при уровне жизни фильтра < 10%).
#
# Особенности:
#   1. Проветривание:
#      • Пороговые значения (жёсткий и мягкий) настраиваются через интерфейс Home Assistant;
#      • Период усреднения CO2 и время сброса уведомлений настраиваются через `input_number`.
#      • Гистерезис предотвращает частые переключения состояний.
#   2. Климатические устройства:
#      • Кондиционер, очиститель воздуха и увлажнитель отключаются при открытии двери;
#      • Их состояние восстанавливается при закрытии двери, если не включён зимний режим.
#   3. Защита от ошибок:
#      • Кондиционер автоматически отключается, если активирован зимний режим.
#      • Автоматическое сброс уведомлений (например, о CO2 или замене фильтра) после истечения заданного времени.
#   4. Интеграция с уведомлениями:
#      • Уведомления через Яндекс.Станцию (голосовые) и Телеграм (текстовые и с изображением).
#
################################################################################

input_number:
  # Значения можно изменять в зависимости от сезона или условий эксплуатации
  # прямо из интерфейса
  # Порог CO2, при котором проветривание требуется (жёсткий порог)
  co2_threshold_high:
    name: "Порог CO2 для проветривания (жёсткий)"
    min: 400
    max: 2000
    step: 50
    initial: 1000
  # Порог CO2, при котором проветривание считается завершённым (мягкий порог)
  co2_threshold_low:
    name: "Порог CO2 для завершения проветривания (мягкий)"
    min: 300
    max: 1500
    step: 50
    initial: 550
  # Период сброса уведомлений (в минутах)
  co2_notification_reset_period:
    name: "Период сброса уведомлений"
    min: 5
    max: 60
    step: 1
    initial: 22

binary_sensor:
  - platform: template
    sensors:
      livingroom_ventilation_need:
        unique_id: livingroom_ventilation_need
        friendly_name: "Необходимость проветривания"
        value_template: >
          {% set co2 = states('sensor.uroven_co2_sglazhennyi') | float(0) %}
          {% set high = states('input_number.co2_threshold_high') | float(0) %}
          {% set low  = states('input_number.co2_threshold_low')  | float(0) %}
          {% set old = states('binary_sensor.livingroom_ventilation_need') %}
          {% if states('sensor.uroven_co2_sglazhennyi') in ['unknown','unavailable'] %}
            off
          {% else %}
            {% if old == 'on' %}
              {{ 'on' if co2 > low else 'off' }}
            {% else %}
              {{ 'on' if co2 > high else 'off' }}
            {% endif %}
          {% endif %}

      livingroom_ventilation_status:
        unique_id: livingroom_ventilation_status
        friendly_name: "Статус проветривания"
        value_template: >
          {% set co2 = states('sensor.uroven_co2_sglazhennyi') | float(0) %}
          {% set low = states('input_number.co2_threshold_low') | float(0) %}
          {{ 'on' if co2 < low else 'off' }}
      # --------------------------------------------------------------------------
      # Датчик состояния выходов на терассу в гостиной
      # --------------------------------------------------------------------------
      # doors_in_kitchen_livingroom:
      #   - 'on', если хотя бы одна из дверей на балкон открыта.
      #   - 'off', если все двери закрыты.
      #   Можно применять для автоматического отключения кондиционера/увлажнителя
      #   при проветривании.
      doors_in_kitchen_livingroom:
        unique_id: doors_in_kitchen_livingroom
        friendly_name: "Двери на балкон с гостиной"
        device_class: door
        value_template: >
          {% set sensors = [
            'binary_sensor.gostinaia_balkon_contact',
            'binary_sensor.0x00158d0003ce9922_contact'
          ] %}
          {{ sensors | select('is_state', 'on') | list | length > 0 }}

###############################################################################
# СЕНСОР УСРЕДНЁННОГО УРОВНЯ CO2
# Фиксированное значение: 2 минуты (каждую секунду обновление)
###############################################################################
sensor:
  - platform: filter
    name: "Уровень CO2 (сглаженный)"
    entity_id: sensor.co2_monitor_co2
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02" # Окно усреднения — 2 минуты
        precision: 0 # Округление до целых чисел

  # Сенсор для усреднённого значения температуры
  - platform: filter
    name: "Температура в гостинной (сглаженная)"
    entity_id: sensor.livingroom_average_temperature
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02" # Окно усреднения — 2 минуты
        precision: 2 # Округление до двух знаков после запятой
  # Скрипты для интеграции с Яндекс -> yandex_helper.yaml

##############################################################################
#                             АВТОМАТИЗАЦИИ
##############################################################################
automation:
  - id: "b44e93fc-7746-4ff5-8846-2d350fecb813"
    alias: "Уведомление о необходимости проветривания (усреднённое значение)"
    description: >
      Автоматизация отправляет уведомления (голосом через Яндекс.Станцию или в Телеграм),
      используя усреднённое значение CO2 за последние 2 минуты.
    triggers:
      - platform: state
        entity_id: binary_sensor.livingroom_ventilation_need
        to: "on"
    conditions:
      - condition: state
        entity_id: input_boolean.co2_voice_notification_sensor
        state: "off"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "off"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: script.yandex_tts_co2_alert
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "on"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: notify.master
                data:
                  message: >
                    Уровень CO2 превышает норму. Рекомендуется проветрить гостиную.
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.co2_voice_notification_sensor

  - id: "31a294d7-4c2d-4289-a8b0-04f2cea38553"
    alias: "Уведомление о завершении проветривания (усреднённое значение)"
    description: >
      Автоматизация отправляет уведомления (голосом через Яндекс.Станцию или в Телеграм),
      используя логическое завершение проветривания.
    triggers:
      - platform: state
        entity_id: binary_sensor.livingroom_ventilation_status
        from: "off"
        to: "on"
        for:
          minutes: 1
    conditions:
      - condition: state
        entity_id: input_boolean.co2_text_notification_sensor
        state: "off"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "off"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: script.yandex_tts_co2_normal
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "on"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: notify.master
                data:
                  message: >
                    Проветривание завершено. Уровень CO2 в норме.
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.co2_text_notification_sensor

  # --------------------------------------------------------------------------
  # Сброс co2_voice_notification_sensor и co2_text_notification_sensor через 22 минуты
  # --------------------------------------------------------------------------
  - id: "469fe5d8-4b48-40bb-b967-0d09a83ee4f0"
    alias: "HELPER: Сброс уведомлений СО2"
    triggers:
      - platform: state
        entity_id:
          - input_boolean.co2_voice_notification_sensor
          - input_boolean.co2_text_notification_sensor
        to: "on"
    actions:
      - delay: >
          00:{{ states('input_number.co2_notification_reset_period') | int }}:00
      - service: input_boolean.turn_off
        target:
          entity_id:
            - input_boolean.co2_voice_notification_sensor
            - input_boolean.co2_text_notification_sensor

  ##########################################################################
  # ПЕРЕКЛЮЧЕНИЕ БРА ПО СЦЕНИЧЕСКОМУ ВЫКЛЮЧАТЕЛЮ (4_single)
  ##########################################################################
  - id: "9fff2de3-f169-4fda-8a8a-91966fc51f13"
    alias: "Гостиная: переключение бра (кнопка 4, одиночное нажатие)"
    triggers:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 4_single
    conditions: []
    actions:
      - service: light.toggle
        target:
          entity_id: light.livingroom_scone_dimmer
    mode: single

  ##########################################################################
  # ПЕРЕКЛЮЧЕНИЕ ЛЮСТРЫ ПО СЦЕНИЧЕСКОМУ ВЫКЛЮЧАТЕЛЮ (3_single)
  ##########################################################################
  - id: "54ea7c3d-a37d-4ce4-80ff-f2da00a450c2"
    alias: "Гостиная: переключение люстры (кнопка 3, одиночное нажатие)"
    triggers:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 3_single
    conditions: []
    actions:
      - service: light.toggle
        target:
          entity_id: light.livingroom_main_switch_left
    mode: single

  ##########################################################################
  # ПЕРЕКЛЮЧЕНИЕ СВЕТА В ЗОНЕ ДИВАНА ПРИ ДВОЙНОМ НАЖАТИИ НА 4-Ю КНОПКУ (4_double)
  ##########################################################################
  # Новая автоматизация: при двойном нажатии 4-й кнопки включаем/выключаем
  # свет livingroom_main_switch_right.
  #
  - id: "916eb0c3-eee6-409d-9ce2-4dc00c9f7051"
    alias: "Гостиная: переключение правого света (кнопка 4, двойное нажатие)"
    triggers:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 4_double
    conditions: []
    actions:
      - service: light.toggle
        target:
          entity_id: light.livingroom_main_switch_right
    mode: single

  ##############################################################################
  # Климатическая техника: отключение при открытой двери (на 1 мин)
  ##############################################################################
  # Отключает кондиционер, очиститель воздуха и увлажнитель, когда дверь
  # между гостиной и кухней открыта более 1 минуты, сохраняя предыдущее состояние.
  #
  - id: "f4e42442-155e-4d0a-87c2-3f21fd72025d"
    alias: "Гостиная: Климат, отключить устройства при открытии двери"
    description: >
      Отключает кондиционер (climate.konditsioner), очиститель воздуха 
      (switch.zhimi_mb3_a5d3_switch_status) и увлажнитель (switch.livingroom_socket_l) 
      через 1 минуту после открытия двери, если они были включены. Сохраняет 
      в input_boolean.*_pre_state, чтобы при закрытии двери восстановить работу.
    triggers:
      - platform: state
        entity_id: binary_sensor.doors_in_kitchen_livingroom
        to: "on"
        for:
          minutes: 1
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: climate.konditsioner
                state: "on"
              - condition: state
                entity_id: input_boolean.winter_mode
                state: "off"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_climate_pre_state
              - service: climate.turn_off
                target:
                  entity_id: climate.konditsioner
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.zhimi_mb3_a5d3_switch_status
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_fan_pre_state
              - service: switch.turn_off
                target:
                  entity_id: switch.zhimi_mb3_a5d3_switch_status
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.evolution_hf_878
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_humidifier_pre_state
              - service: switch.turn_off
                target:
                  entity_id: switch.evolution_hf_878

  ##############################################################################
  # Климатическая техника: восстановление состояния при закрытой двери
  ##############################################################################
  # Если дверь снова закрыта (binary_sensor.doors_in_kitchen_livingroom == off),
  # восстанавливаем кондиционер/очиститель/увлажнитель, но только если
  # соответствующие флаги pre_state были установлены в on (значит устройство
  # было включено ранее). В случае кондиционера -- проверяем, что не зима
  # (winter_mode == off).
  #
  - id: "0347cae6-1b2f-436a-a54c-792feafa9620"
    alias: "Гостиная: Климат, восстановление состояния устройств"
    description: >
      Восстанавливает состояние кондиционера, очистителя воздуха 
      и увлажнителя при закрытии двери, если они были выключены 
      предыдущей автоматизацией. После включения сбрасывает флаги pre_state.
    triggers:
      - platform: state
        entity_id: binary_sensor.doors_in_kitchen_livingroom
        to: "off"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_climate_pre_state
                state: "on"
              - condition: state
                entity_id: input_boolean.winter_mode
                state: "off"
            sequence:
              - service: climate.turn_on
                target:
                  entity_id: climate.konditsioner
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_fan_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.zhimi_mb3_a5d3_switch_status
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_humidifier_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.evolution_hf_878
      - service: input_boolean.turn_off
        target:
          entity_id:
            - input_boolean.door_open_climate_pre_state
            - input_boolean.door_open_fan_pre_state
            - input_boolean.door_open_humidifier_pre_state

  # --------------------------------------------------------------------------
  # ЗАЩИТА ОТ ДУРАКА
  # --------------------------------------------------------------------------
  # Не даём включить кондиционер зимой
  #
  - id: "b9867c28-be9f-425e-9fee-0aea777d04c0"
    alias: "HELPER: Защита: не включать кондиционер при активном Зимнем режиме"
    description: >
      Если включён input_boolean.winter_mode, при попытке включить
      кондиционер автоматически возвращаем его в off.
    triggers:
      - platform: state
        entity_id: climate.konditsioner
        from: "off"
    actions:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.winter_mode
                state: "on"
            sequence:
              - service: climate.turn_off
                target:
                  entity_id: climate.konditsioner
              - service: notify.master
                data:
                  message: "Кондиционер принудительно отключён: включён Зимний режим."
              - service: script.yandex_tts_kondicioner_warning
    mode: single

  # ----------------------------------------------------------------------------
  # Уведомление: Необходимо заменить фильтр (кондиционер)
  # ----------------------------------------------------------------------------
  # Если sensor.konditsioner_filter_remaining_life опустился ниже 10% на 1 минуту,
  # при условии, что silent_mode == off, system_startup_phase == off и у нас ещё
  # не выставлен флаг filter_replace_notified, отправляем уведомление и выставляем
  # данный флаг во избежание повторов.
  # ----------------------------------------------------------------------------
  - id: "4d19ce98-16f7-41ea-afcf-34ffb4e64b4a"
    alias: "Уведомление. Телеграм: Необходимо заменить фильтр"
    description: "Уведомление о необходимости замены фильтра"
    triggers:
      - platform: numeric_state
        entity_id: sensor.konditsioner_filter_remaining_life
        below: 10
        for:
          minutes: 1
    conditions:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.filter_replace_notified
        state: "off"
      - condition: time
        after: "08:00:00"
        before: "20:00:00"
    actions:
      - service: notify.master
        data:
          message: "Необходимо заменить фильтр в кондиционере"
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.filter_replace_notified
    mode: single

  # ----------------------------------------------------------------------------
  # Автоматизация для сброса уведомления после замены фильтра
  # ----------------------------------------------------------------------------
  # Если sensor.konditsioner_filter_remaining_life снова поднялся выше 10%,
  # по прошествии 1 минуты, сбрасываем флаг filter_replace_notified в off.
  # ----------------------------------------------------------------------------
  - id: "da15cbba-b4f0-42e5-8bcd-5e9affe17073"
    alias: "HELPER: Сброс уведомления о замене фильтра"
    description: "Сброс флага уведомления после замены фильтра"
    triggers:
      - platform: numeric_state
        entity_id: sensor.konditsioner_filter_remaining_life
        above: 10
        for:
          minutes: 1
    actions:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.filter_replace_notified
    mode: single
