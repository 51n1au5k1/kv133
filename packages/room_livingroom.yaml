################################################################################
# /packages/room_livingroom.yaml
################################################################################
#
# Назначение:
#   Данный пакет Home Assistant предназначен для управления:
#     - Освещением: бра, свет в зоне дивана, люстрой;
#     - Климатическими устройствами: кондиционер, очиститель воздуха, увлажнитель;
#     - Проветриванием на основе уровня CO2.
#
# Автоматизации позволяют:
#   • Управлять освещением с помощью сценического выключателя:
#     - Бра: одиночное нажатие кнопки 4;
#     - Люстра: одиночное нажатие кнопки 3;
#     - Свет в зоне дивана: двойное нажатие кнопки 4.
#   • Контролировать климатические устройства:
#     - Отключать устройства при открытии двери на балкон (дольше 1 минуты);
#     - Восстанавливать их состояние при закрытии двери, сохраняя предыдущее состояние.
#   • Управлять проветриванием на основе уровня CO2:
#     - Автоматически включать состояние "нуждается в проветривании", если CO2 выше жёсткого порога;
#     - Считать проветривание завершённым, если CO2 опустился ниже мягкого порога.
#   • Отправлять уведомления:
#     - Необходимость проветривания и завершение проветривания (через Яндекс.Станцию и Телеграм);
#     - Замена фильтра кондиционера (при уровне жизни фильтра < 10%).
#
# Особенности:
#   1. Проветривание:
#      • Пороговые значения (жёсткий и мягкий) настраиваются через интерфейс Home Assistant;
#      • Период усреднения CO2 и время сброса уведомлений настраиваются через `input_number`.
#      • Гистерезис предотвращает частые переключения состояний.
#   2. Климатические устройства:
#      • Кондиционер, очиститель воздуха и увлажнитель отключаются при открытии двери;
#      • Их состояние восстанавливается при закрытии двери, если не включён зимний режим.
#   3. Защита от ошибок:
#      • Кондиционер автоматически отключается, если активирован зимний режим.
#      • Автоматическое сброс уведомлений (например, о CO2 или замене фильтра) после истечения заданного времени.
#   4. Интеграция с уведомлениями:
#      • Уведомления через Яндекс.Станцию (голосовые) и Телеграм (текстовые и с изображением).
#
################################################################################

input_number:
  co2_threshold_high:
    name: "Порог CO2 для проветривания (жёсткий)"
    min: 400
    max: 2000
    step: 50
    initial: 1000
  co2_threshold_low:
    name: "Порог CO2 для завершения проветривания (мягкий)"
    min: 300
    max: 1500
    step: 50
    initial: 550
  co2_notification_reset_period:
    name: "Период сброса уведомлений"
    min: 5
    max: 60
    step: 1
    initial: 22

binary_sensor:
  - platform: template
    sensors:
      livingroom_ventilation_need:
        unique_id: livingroom_ventilation_need
        friendly_name: "Необходимость проветривания"
        device_class: problem
        availability_template: >
          {{ states('sensor.uroven_co2_sglazhennyi') not in ['unknown','unavailable',''] }}
        value_template: >
          {% set co2  = states('sensor.uroven_co2_sglazhennyi') | float(0) %}
          {% set high = states('input_number.co2_threshold_high') | float(0) %}
          {% set low  = states('input_number.co2_threshold_low')  | float(0) %}
          {% set was_on = is_state('binary_sensor.livingroom_ventilation_need','on') %}
          {{ (co2 > low) if was_on else (co2 > high) }}

      livingroom_ventilation_status:
        unique_id: livingroom_ventilation_status
        friendly_name: "Статус проветривания"
        availability_template: >
          {{ states('sensor.uroven_co2_sglazhennyi') not in ['unknown','unavailable',''] }}
        value_template: >
          {% set co2 = states('sensor.uroven_co2_sglazhennyi') | float(0) %}
          {% set low = states('input_number.co2_threshold_low') | float(0) %}
          {{ co2 < low }}

      # Двери на балкон (любая открыта -> on)
      doors_in_kitchen_livingroom:
        unique_id: doors_in_kitchen_livingroom
        friendly_name: "Двери на балкон с гостиной"
        device_class: door
        value_template: >
          {% set sensors = [
            'binary_sensor.gostinaia_balkon_contact',
            'binary_sensor.0x00158d0003ce9922_contact'
          ] %}
          {{ sensors | select('is_state', 'on') | list | length > 0 }}

sensor:
  - platform: filter
    name: "Уровень CO2 (сглаженный)"
    entity_id: sensor.co2_monitor_co2
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02"
        precision: 0

  - platform: filter
    name: "Температура в гостинной (сглаженная)"
    entity_id: sensor.livingroom_average_temperature
    filters:
      - filter: time_simple_moving_average
        window_size: "00:02"
        precision: 2

##############################################################################
#                             АВТОМАТИЗАЦИИ
##############################################################################
automation:
  # Уведомление: требуется проветривание
  - id: "b44e93fc-7746-4ff5-8846-2d350fecb813"
    alias: "Уведомление о необходимости проветривания (усреднённое значение)"
    description: "CO2 выше жёсткого порога — уведомить (TTS/Telegram), проставить флаг."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.livingroom_ventilation_need
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.co2_voice_notification_sensor
        state: "off"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "off"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: script.yandex_tts_co2_alert
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "on"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: notify.master
                data:
                  message: "Уровень CO2 превышает норму. Рекомендуется проветрить гостиную."
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.co2_voice_notification_sensor

  # Уведомление: проветривание завершено
  - id: "31a294d7-4c2d-4289-a8b0-04f2cea38553"
    alias: "Уведомление о завершении проветривания (усреднённое значение)"
    description: "CO2 устойчиво ниже мягкого порога — уведомить (TTS/Telegram), проставить флаг."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.livingroom_ventilation_status
        from: "off"
        to: "on"
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: input_boolean.co2_text_notification_sensor
        state: "off"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "off"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: script.yandex_tts_co2_normal
          - conditions:
              - condition: state
                entity_id: input_boolean.silent_mode
                state: "on"
              - condition: state
                entity_id: person.master
                state: "home"
            sequence:
              - service: notify.master
                data:
                  message: "Проветривание завершено. Уровень CO2 в норме."
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.co2_text_notification_sensor

  # HELPER: Сброс флагов уведомлений CO2
  - id: "469fe5d8-4b48-40bb-b967-0d09a83ee4f0"
    alias: "HELPER: Сброс уведомлений СО2"
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - input_boolean.co2_voice_notification_sensor
          - input_boolean.co2_text_notification_sensor
        to: "on"
    action:
      - delay: "00:{{ states('input_number.co2_notification_reset_period') | int }}:00"
      - service: input_boolean.turn_off
        target:
          entity_id:
            - input_boolean.co2_voice_notification_sensor
            - input_boolean.co2_text_notification_sensor

  ##########################################################################
  # Освещение по сценическому выключателю
  ##########################################################################
  - id: "9fff2de3-f169-4fda-8a8a-91966fc51f13"
    alias: "Гостиная: переключение бра (кнопка 4, одиночное нажатие)"
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 4_single
    condition: []
    action:
      - service: light.toggle
        target:
          entity_id: light.livingroom_scone_dimmer

  - id: "54ea7c3d-a37d-4ce4-80ff-f2da00a450c2"
    alias: "Гостиная: переключение люстры (кнопка 3, одиночное нажатие)"
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 3_single
    condition: []
    action:
      - service: light.toggle
        target:
          entity_id: light.livingroom_main_switch_left

  - id: "916eb0c3-eee6-409d-9ce2-4dc00c9f7051"
    alias: "Гостиная: переключение правого света (кнопка 4, двойное нажатие)"
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: 719cda594198c3eafa3817b9230f2afa
        type: action
        subtype: 4_double
    condition: []
    action:
      - service: light.toggle
        target:
          entity_id: light.livingroom_main_switch_right

  ##############################################################################
  # Климат: отключение при открытой двери (на 1 мин) с сохранением состояния
  ##############################################################################
  - id: "f4e42442-155e-4d0a-87c2-3f21fd72025d"
    alias: "Гостиная: Климат, отключить устройства при открытии двери"
    description: "Через 1 минуту открытой двери выключить климат/очиститель/увлажнитель, запомнив их состояние."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.doors_in_kitchen_livingroom
        to: "on"
        for:
          minutes: 1
    condition: []
    action:
      # Кондиционер (если был не 'off' и не включён зимний режим)
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ not is_state('climate.konditsioner', 'off') }}"
              - condition: state
                entity_id: input_boolean.winter_mode
                state: "off"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_climate_pre_state
              - service: climate.turn_off
                target:
                  entity_id: climate.konditsioner
      # Очиститель
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.zhimi_mb3_a5d3_switch_status
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_fan_pre_state
              - service: switch.turn_off
                target:
                  entity_id: switch.zhimi_mb3_a5d3_switch_status
      # Увлажнитель
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.evolution_hf_878
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.door_open_humidifier_pre_state
              - service: switch.turn_off
                target:
                  entity_id: switch.evolution_hf_878

  ##############################################################################
  # Климат: восстановление состояния при закрытой двери
  ##############################################################################
  - id: "0347cae6-1b2f-436a-a54c-792feafa9620"
    alias: "Гостиная: Климат, восстановление состояния устройств"
    description: "При закрытии двери восстановить устройства, если они были выключены автоматикой."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.doors_in_kitchen_livingroom
        to: "off"
    condition: []
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_climate_pre_state
                state: "on"
              - condition: state
                entity_id: input_boolean.winter_mode
                state: "off"
            sequence:
              - service: climate.turn_on
                target:
                  entity_id: climate.konditsioner
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_fan_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.zhimi_mb3_a5d3_switch_status
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_humidifier_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.evolution_hf_878
      - service: input_boolean.turn_off
        target:
          entity_id:
            - input_boolean.door_open_climate_pre_state
            - input_boolean.door_open_fan_pre_state
            - input_boolean.door_open_humidifier_pre_state

  # Защита: не включать кондиционер в зимнем режиме
  - id: "b9867c28-be9f-425e-9fee-0aea777d04c0"
    alias: "HELPER: Защита — не включать кондиционер при активном Зимнем режиме"
    description: "Если включён зимний режим, любое включение кондиционера тут же отменяется."
    mode: single
    trigger:
      - platform: state
        entity_id: climate.konditsioner
        from: "off"
    condition:
      - condition: state
        entity_id: input_boolean.winter_mode
        state: "on"
    action:
      - service: climate.turn_off
        target:
          entity_id: climate.konditsioner
      - service: notify.master
        data:
          message: "Кондиционер принудительно отключён: включён Зимний режим."
      - service: script.yandex_tts_kondicioner_warning

  # Уведомление: заменить фильтр кондиционера
  - id: "4d19ce98-16f7-41ea-afcf-34ffb4e64b4a"
    alias: "Уведомление. Телеграм: Необходимо заменить фильтр"
    description: "Если ресурс фильтра <10% в течение 1 мин — уведомить и пометить."
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.konditsioner_filter_remaining_life
        below: 10
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.filter_replace_notified
        state: "off"
      - condition: time
        after: "08:00:00"
        before: "20:00:00"
    action:
      - service: notify.master
        data:
          message: "Необходимо заменить фильтр в кондиционере"
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.filter_replace_notified

  # HELPER: сброс уведомления о замене фильтра
  - id: "da15cbba-b4f0-42e5-8bcd-5e9affe17073"
    alias: "HELPER: Сброс уведомления о замене фильтра"
    description: "Если ресурс фильтра снова >10% (1 мин), сбросить флаг."
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.konditsioner_filter_remaining_life
        above: 10
        for:
          minutes: 1
    condition: []
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.filter_replace_notified