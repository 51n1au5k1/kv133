# /packages/yandex_helper.yaml #
#######################################

# Данный набор конфигураций представляет собой часть интеграции умного дома с
# Яндекс устройствами через Home Assistant, позволяя расширить возможности
# управления и взаимодействия с домашней автоматизацией. Конфигурация включает
# в себя настройки для голосового управления, обработку погодных условий
#
# Настройки интеграции с Яндекс устройствами:
#
# Возможность вести диалоги через Яндекс станцию.

conversation:
  intents:
    media_player.yandex_station_ff98f0294437799304d0788d: [.+]

# Настройка языка распознавания и сервиса текста в речь от Алисы.
yandex_station:
  recognition_lang: ru-RU # Язык распознавания по умолчанию
  tts_service_name: alice_say # Сервис текста в речь от Алисы

input_text:
  yandex_station_entity:
    name: "Yandex Station Entity"
    initial: "media_player.yandex_station_ff98f0294437799304d0788d"

################################################################################
# Скрипты в Home Assistant представляют собой последовательности действий,
# запускаемые в ответ на определённые события или команды.
# В контексте интеграции с Яндекс устройствами, они используются для создания
# богатых взаимодействий между пользователями и умным домом через голосовые
# команды или автоматизации, предоставляя возможности, от простого
# информирования о состоянии дома до управления устройствами
# и создания атмосферы.
#
# Общий принцип работы скриптов:
# Активация через Голосовые Команды или Автоматизации: Скрипты могут быть
# вызваны голосовыми командами через Яндекс устройства или автоматически в
# рамках определённых сценариев.
#
# Выполнение Последовательности Действий: После активации скрипт выполняет
# заранее заданную последовательность действий, например, включение/выключение
# света, воспроизведение голосовых сообщений через Яндекс станцию, управление
# другими устройствами.
#
# Обратная Связь: Скрипты могут предоставлять обратную связь пользователю через
# аудио сообщения, уведомления на мобильные устройства или изменение состояния
# устройств в доме.
################################################################################

script:
  yandex_tts_ppm_status:
    alias: "Yandex_TTS_ppm_status"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            Уровень Цэ О Два составляет {{ states('sensor.co2_monitor_co2') | float(0) | round(0) }} на миллион
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_temp_status:
    alias: "Yandex_TTS_temp_status"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            Температура в гостиной {{ states('sensor.livingroom_climat_sensor_temperature') | float(0) | round(1) }} градуса
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_hum_status:
    alias: "Yandex_TTS_hum_status"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            Влажность {{ states('sensor.livingroom_climat_sensor_humidity') | float(0) | round(0) }} процентов
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_door_status:
    alias: "Yandex_TTS_Which_door_is_open"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          open_doors: >-
            {% set pairs = [
              ('в гостиной', 'binary_sensor.gostinaia_balkon_contact'),
              ('в мастерской', 'binary_sensor.masterskaia_balkon_contact'),
              ('на кухне', 'binary_sensor.0x00158d0003ce9922_contact'),
              ('в спальне', 'binary_sensor.0x00158d00044d5d11_contact')
            ] %}
            {% set res = [] %}
            {% for name, ent in pairs %}
              {% if is_state(ent, 'on') %}
                {% set _ = res.append(name) %}
              {% endif %}
            {% endfor %}
            {{ res }}
          door_message: >-
            {% if open_doors | length > 0 %}
              {% if open_doors | length == 1 %}
                Открыта дверь {{ open_doors[0] }}
              {% else %}
                Открыты двери {{ open_doors | join(', ') }}
              {% endif %}
            {% else %}
              Все двери закрыты
            {% endif %}
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: "{{ door_message }}"
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_shaking_outdoor_button:
    alias: "yandex_tts_button_shaked"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: "Опасность! Опасность! Вашу входную кнопку пытаются снять!"
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_click_outdoor_button:
    alias: "yandex_tts_door_ring"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            {{ ["Тук-тук!", "Па-бам!", "Динь-дон!", "Кто там?", "Внимание!", "На пороге гость!", "Привет!", "Открывай!"] | random }}
            {{ ["К вам кто-то пришёл!", "К вам гости!", "Звонок в дверь!", "Посетитель!", "На пороге!"] | random }}
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_co2_alert:
    alias: "Yandex_TTS_CO2_alert"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            {{ ["Необходимо", "Желательно", "Нужно"] | random }} проветрить {{ ["квартиру", "помещение", "дом"] | random }}
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_co2_normal:
    alias: "Yandex_TTS_CO2_normal"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            Проветривание {{ ["завершено!", "окончено!", "успешно!"] | random }}.
            {{ ["Уровень", "Концентрация", "Показатель"] | random }} Цэ О Два {{ ["в пределах нормы", "в допустимых значениях", "в норме"] | random }}.
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_kitchen_fan_alert:
    alias: "Yandex_TTS_Kitchen_Fan_alert"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            {{ ["Возможно стоит включить вытяжку на кухне", "Рекомендую включить вытяжку"] | random }}
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_washing_machine_finished:
    alias: "yandex_tts_wash_finished"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: "Стирка завершена! Заберите белье."
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_washing_machine_reminder:
    alias: "yandex_tts_wash_finished_reminder"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: "Кажется, вы забыли развесить стирку!"
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"

  yandex_tts_kondicioner_warning:
    alias: "yandex_tts_kondicioner_warning"
    sequence:
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - variables:
          yandex_station_entity: "{{ states('input_text.yandex_station_entity') }}"
      - service: media_player.play_media
        target:
          entity_id: "{{ yandex_station_entity }}"
        data:
          media_content_id: >
            {{ ["Кажется, вы забыли, что зимой не рекомендуется использовать кондиционер!",
                "Рекомендую забыть о кондиционере в зимний период.",
                "Кондиционер впал в зимнюю спячку"] | random }}
          media_content_type: "text"
    mode: single
    icon: "yandex:alisa"
