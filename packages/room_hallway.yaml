################################################################################
# /packages/room_hallway.yaml
################################################################################
#
# Назначение:
#   Этот пакет Home Assistant настраивает:
#     • Автоматизации освещения в прихожей (кнопка, дверь, движение, таймер, мигание).
#     • Контроль микроклимата СЕЙФА (strongbox): сглаживание T/RH, расчёт точки росы,
#       абсолютной влажности, бинарные датчики «риск плесени»/«норма», флаг уведомлений
#       и подтверждения для отсечки ложных срабатываний.
#
# Доработки:
#   - Добавлен гистерезис (for: в триггерах) для стабильности.
#   - silent_mode/startup_phase во все релевантные автоматизации освещения.
#   - Настраиваемая длительность таймера и количество миганий через input_number.
#   - Логирование и проверки на someone_is_home/unavailable.
#   - СЕЙФ: настраиваемые пороги RH/T и времена подтверждения; вычисление точки росы и абс. влажности.
#
################################################################################

##############################################################################
#                          ВХОДНЫЕ БУЛЕВЫЕ ПЕРЕМЕННЫЕ
##############################################################################
input_boolean:
  hallway_first_door_open:
    name: "Первое открытие двери в прихожей"
    initial: off
    icon: mdi:door-open

  # --- СЕЙФ: флаг «уведомление отправлено» (его слушает пакет Telegram) ---
  strongbox_hum_text_notified:
    name: "Сейф: текстовое уведомление отправлено"
    initial: off
    icon: mdi:message-alert

##############################################################################
#                          ВХОДНЫЕ ЧИСЛОВЫЕ ПАРАМЕТРЫ
##############################################################################
input_number:
  hallway_timer_duration:
    name: "Продолжительность таймера прихожей (мин)"
    min: 1
    max: 5
    step: 0.5
    initial: 1.5

  hallway_blink_count:
    name: "Количество миганий при звонке"
    min: 1
    max: 5
    step: 1
    initial: 3

  # --- СЕЙФ: пороги и времена подтверждения ---
  strongbox_humidity_high:
    name: "Сейф: высокий порог RH (%)"
    min: 50
    max: 85
    step: 1
    initial: 65

  strongbox_humidity_low:
    name: "Сейф: низкий порог RH (%) (гистерезис)"
    min: 40
    max: 80
    step: 1
    initial: 55

  strongbox_temp_min:
    name: "Сейф: минимальная температура (°C)"
    min: 5
    max: 25
    step: 0.5
    initial: 15

  strongbox_confirm_min:
    name: "Сейф: подтверждение риска (мин)"
    min: 1
    max: 60
    step: 1
    initial: 10

  strongbox_resolve_min:
    name: "Сейф: подтверждение нормализации (мин)"
    min: 1
    max: 120
    step: 1
    initial: 20

##############################################################################
#                                   ТАЙМЕРЫ
##############################################################################
timer:
  timer_hallway:
    name: "Движение отсутствует"
    duration: "00:01:30" # Базовое; при старте задаём динамически через data.duration

  # Окно прибытия
  timer_arrival_window:
    name: "Окно после прихода домой"
    duration: "00:10:00" # можно потом вынести в input_number

##############################################################################
#                                   СЕНСОРЫ
##############################################################################
# СЕЙФ: сглаживание температуры и влажности для устойчивых расчётов
sensor:
  - platform: filter
    name: "strongbox_humidity_smoothed"
    unique_id: strongbox_humidity_smoothed
    entity_id: sensor.strongbox_th_humidity
    filters:
      - filter: time_simple_moving_average
        window_size: "00:05"
        precision: 1

  - platform: filter
    name: "strongbox_temperature_smoothed"
    unique_id: strongbox_temperature_smoothed
    entity_id: sensor.strongbox_th_temperature
    filters:
      - filter: time_simple_moving_average
        window_size: "00:05"
        precision: 2

##############################################################################
#                               ШАБЛОННЫЕ СЕНСОРЫ
##############################################################################
# СЕЙФ: производные — точка росы и абсолютная влажность
template:
  - sensor:
      - name: "strongbox_dew_point_c"
        unique_id: strongbox_dew_point_c
        state_class: measurement
        unit_of_measurement: "°C"
        icon: mdi:water-percent
        availability: >-
          {{ states('sensor.strongbox_temperature_smoothed') not in ['unknown','unavailable','']
             and states('sensor.strongbox_humidity_smoothed') not in ['unknown','unavailable',''] }}
        state: >-
          {% set T  = states('sensor.strongbox_temperature_smoothed') | float(0) %}
          {% set RH = states('sensor.strongbox_humidity_smoothed')    | float(0) %}
          {% if RH <= 0 %}
            unknown
          {% else %}
            {% set a, b = 17.62, 243.12 %}
            {% set gamma = ((a*T)/(b+T)) + (RH/100) | log %}
            {{ ((b*gamma)/(a-gamma)) | round(2) }}
          {% endif %}

      - name: "Сейф: абсолютная влажность, г/м³"
        unique_id: strongbox_absolute_humidity_gm3
        unit_of_measurement: "г/м³"
        icon: mdi:water-percent
        availability: >-
          {{ states('sensor.strongbox_temperature_smoothed') not in ['unknown','unavailable','']
             and states('sensor.strongbox_humidity_smoothed') not in ['unknown','unavailable',''] }}
        state: >-
          {# AH = 1324.95 * (RH/100) * exp(17.67*T/(T+243.5)) / (T+273.15) #}
          {% set T  = states('sensor.strongbox_temperature_smoothed') | float(0) %}
          {% set RH = states('sensor.strongbox_humidity_smoothed')   | float(0) %}
          {% if RH <= 0 %}
            unknown
          {% else %}
            {% set x = (17.67 * T) / (T + 243.5) %}
            {{ (1324.95 * (RH/100.0) * (2.718281828459045 ** x) / (T + 273.15)) | round(2) }}
          {% endif %}

##############################################################################
#                              БИНАРНЫЕ ДАТЧИКИ
##############################################################################
# СЕЙФ: «риск плесени» с гистерезисом и «условия в норме»
binary_sensor:
  - platform: template
    sensors:
      strongbox_mold_risk:
        unique_id: strongbox_mold_risk
        friendly_name: "Сейф: риск плесени"
        device_class: problem
        availability_template: >-
          {{ states('sensor.strongbox_temperature_smoothed') not in ['unknown','unavailable','']
             and states('sensor.strongbox_humidity_smoothed') not in ['unknown','unavailable','']
             and states('sensor.strongbox_dew_point_c') not in ['unknown','unavailable',''] }}
        value_template: >-
          {% set T   = states('sensor.strongbox_temperature_smoothed') | float(0) %}
          {% set RH  = states('sensor.strongbox_humidity_smoothed')    | float(0) %}
          {% set dp  = states('sensor.strongbox_dew_point_c')         | float(-100) %}
          {% set hi  = states('input_number.strongbox_humidity_high') | float(65) %}
          {% set lo  = states('input_number.strongbox_humidity_low')  | float(55) %}
          {% set was = is_state('binary_sensor.strongbox_mold_risk','on') %}
          {% set close_to_dp = (T - dp) <= 1.0 %}
          {{ (RH >= lo and close_to_dp) if was else (RH >= hi or (RH >= lo and close_to_dp)) }}

      strongbox_safe_status:
        unique_id: strongbox_safe_status
        friendly_name: "Сейф: условия в норме"
        device_class: safety
        availability_template: >-
          {{ states('sensor.strongbox_temperature_smoothed') not in ['unknown','unavailable','']
             and states('sensor.strongbox_humidity_smoothed') not in ['unknown','unavailable',''] }}
        value_template: >-
          {% set T  = states('sensor.strongbox_temperature_smoothed') | float(0) %}
          {% set RH = states('sensor.strongbox_humidity_smoothed')    | float(0) %}
          {% set lo = states('input_number.strongbox_humidity_low') | float(55) %}
          {% set tmin = states('input_number.strongbox_temp_min')  | float(15) %}
          {{ RH <= lo and T >= tmin }}

##############################################################################
#                                 АВТОМАТИЗАЦИИ
##############################################################################
automation:
  ##########################################################################
  # Прихожая: Вкл/выкл света кнопкой
  ##########################################################################
  - id: "fc57ec27-9c9d-489a-8f5f-050b489466f7"
    alias: "Прихожая: Вкл/выкл света кнопкой"
    description: "Тоггл света по кнопке; после — старт/отмена таймера по факту."
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: cfd464e1cbfa3da2ddd4f2109d74eb4e
        type: action
        subtype: single
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - type: toggle
        device_id: 61c0ac07893316543e261176eb0cb5f9
        entity_id: 89add52cab26b9b6bcad7e86fd6387ec
        domain: light
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.hallway_switch
                    state: "on"
                  - condition: state
                    entity_id: light.gateway_light_04cf8c977cdd
                    state: "on"
            sequence:
              - service: timer.start
                target:
                  entity_id: timer.timer_hallway
                data:
                  duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
        default:
          - service: timer.cancel
            target:
              entity_id: timer.timer_hallway
      - service: system_log.write
        data:
          message: "Свет в прихожей toggled по кнопке."
          level: info

  ##########################################################################
  # Прихожая: Включение освещения при открытии двери
  ##########################################################################
  - id: "3c9a07a9-58ee-4287-87ee-734687c93bba"
    alias: "Прихожая: Включение освещения при открытии двери"
    description: "Включает свет при устойчиво открытой двери."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_door_contact
        to: "on"
        for:
          seconds: 5
    condition:
      - condition: state
        entity_id: light.hallway_switch
        state: "off"
      - condition: time
        after: "08:30:00"
        before: "23:00:00"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_door_contact') not in ['unknown','unavailable',''] }}"
    action:
      - service: light.turn_on
        target:
          entity_id: light.hallway_switch
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён по двери."
          level: info

  ##########################################################################
  # Прихожая: Включение света по движению и низкой освещённости
  ##########################################################################
  - id: "7f815fb8-98f4-437a-96fc-06984d9a4a25"
    alias: "Прихожая: Вкл света при движении и низкой освещенности"
    description: "Включает подсветку шлюза при движении и низкой освещённости."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "on"
        for:
          seconds: 10
    condition:
      - condition: numeric_state
        entity_id: sensor.illumination_04cf8c977cdd
        below: 250
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_motion_occupancy') not in ['unknown','unavailable',''] }}"
    action:
      - service: light.turn_on
        target:
          entity_id: light.gateway_light_04cf8c977cdd
        data:
          brightness_pct: 7
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён по движению."
          level: info

  ##########################################################################
  # Прихожая: Запуск таймера при отсутствии движения
  ##########################################################################
  - id: "3b6e37de-3b10-4201-afad-221dbe4cd4a0"
    alias: "Прихожая: Запуск таймера при отсутствии движения"
    description: "Стартует таймер, когда движение прекратилось."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "off"
        for:
          seconds: 10
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: light.hallway_switch
            state: "on"
          - condition: state
            entity_id: light.gateway_light_04cf8c977cdd
            state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Таймер прихожей запущен (отсутствие движения)."
          level: info

  ##########################################################################
  # Прихожая: Перезапуск таймера при обнаружении движения
  ##########################################################################
  - id: "479b917d-e4c2-4149-97e7-d12779b9f3ce"
    alias: "Прихожая: Перезапуск таймера при обнаружении движения"
    description: "Продлевает освещение при новом движении."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "on"
        for:
          seconds: 5
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: light.hallway_switch
            state: "on"
          - condition: state
            entity_id: light.gateway_light_04cf8c977cdd
            state: "on"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - service: timer.cancel
        target:
          entity_id: timer.timer_hallway
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Таймер прихожей перезапущен (движение)."
          level: info

  ##########################################################################
  # Прихожая: Выключение света по истечении таймера
  ##########################################################################
  - id: "7f6bdbae-a73b-4509-8db8-43f71a3525ca"
    alias: "Прихожая: Выключение света по таймеру"
    description: "Выключает освещение по окончании таймера (кроме режима уборки)."
    mode: single
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_hallway
    condition:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: light.turn_off
        target:
          entity_id:
            - light.hallway_switch
            - light.gateway_light_04cf8c977cdd
      - service: system_log.write
        data:
          message: "Свет в прихожей выключен по таймеру."
          level: info

  ##########################################################################
  # Прихожая: Включение света при первом открытии двери после прихода домой
  ##########################################################################
  - id: "first-door-home-automation"
    alias: "Прихожая: Включение света при первом открытии двери после прихода домой"
    description: "Включаем свет, если дверь впервые открыта в активное окно после прихода."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_door_contact
        to: "on"
        for:
          seconds: 2 # было 5 — можно оставить 5, если датчик стабильный
    condition:
      - condition: state
        entity_id: input_boolean.hallway_first_door_open
        state: "off"
      - condition: state
        entity_id: person.master
        state: "home"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_door_contact') not in ['unknown','unavailable',''] }}"
      - condition: state
        entity_id: timer.timer_arrival_window
        state: "active" # ключевая проверка «ещё в окне после прихода»
    action:
      - service: light.turn_on
        target:
          entity_id: light.hallway_switch
      - service: light.turn_on
        target:
          entity_id: light.gateway_light_04cf8c977cdd
        data:
          brightness_pct: 100
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.hallway_first_door_open
      - service: timer.cancel
        target:
          entity_id: timer.timer_arrival_window
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён при первом входе (окно прибытия активно)."
          level: info

  ##########################################################################
  # Прихожая: Сброс флага «первое открытие двери» при уходе
  ##########################################################################
  - id: "reset-first-door-flag"
    alias: "Прихожая: Пришёл домой — открыть окно и сбросить флаг"
    mode: single
    trigger:
      - platform: state
        entity_id: person.master
        to: "home"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.hallway_first_door_open
      - service: timer.start
        target:
          entity_id: timer.timer_arrival_window
      - service: system_log.write
        data:
          message: "Прибытие домой: сброс флага и старт окна 10 минут."
          level: info

  ##########################################################################
  # Прихожая: Уведомление. Яндекс: Звонок в дверь (мигание)
  ##########################################################################
  - id: "37a7b942-71ea-456e-8f9e-1718c8c34a8d"
    alias: "Уведомление. Яндекс: Звонок в дверь"
    description: "Алиса произносит фразу и мигает светом при нажатии кнопки."
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: d2c3001cdc59660c456de45aec09da91
        type: action
        subtype: single
      - platform: state
        entity_id: event.madv_cn_329651133_miowlv2l_doorbell_ring_e_2_1
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - condition: state
        entity_id: binary_sensor.someone_is_home
        state: "on"
    action:
      - variables:
          was_on_led: "{{ is_state('light.working_room_led', 'on') }}"
      - service: script.yandex_tts_click_outdoor_button
      - repeat:
          count: "{{ states('input_number.hallway_blink_count') | int }}"
          sequence:
            - service: light.turn_on
              target:
                entity_id:
                  - light.gateway_light_04cf8c977cdd
                  - light.working_room_led
            - delay: "00:00:01"
            - service: light.turn_off
              target:
                entity_id:
                  - light.gateway_light_04cf8c977cdd
                  - light.working_room_led
            - delay: "00:00:01"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ was_on_led }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.working_room_led
        default:
          - service: light.turn_off
            target:
              entity_id: light.working_room_led
      - service: system_log.write
        data:
          message: "Обработан звонок в дверь (мигание выполнено)."
          level: info

  ##########################################################################
  # Прихожая: Уведомление. Входную кнопку пытаются снять
  ##########################################################################
  - id: "26345165-2c00-489c-af7b-c4b92110c937"
    alias: "Уведомление. Входную кнопку пытаются снять"
    description: "TTS + Telegram при встряхивании кнопки."
    mode: single
    trigger:
      - platform: device
        domain: mqtt
        device_id: d2c3001cdc59660c456de45aec09da91
        type: action
        subtype: shake
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
    action:
      - service: script.yandex_tts_shaking_outdoor_button
      - service: notify.master
        data:
          message: "⚠️ Внимание! Входную кнопку пытаются снять 🛑"
      - service: system_log.write
        data:
          message: "Обнаружена попытка снятия входной кнопки."
          level: warning

  ############################################################################
  # СЕЙФ: подтв. РИСК плесени -> поднять флаг (дальше телега отправит)
  ############################################################################
  - id: "strongbox_risk_confirm"
    alias: "Сейф: риск плесени (подтверждение)"
    description: "Если risk=on устойчиво strongbox_confirm_min минут — поднять флаг уведомления."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.strongbox_mold_risk
        to: "on"
        for:
          minutes: "{{ states('input_number.strongbox_confirm_min') | int(10) }}"
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.strongbox_hum_text_notified
        state: "off"
    action:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.strongbox_hum_text_notified
      - service: system_log.write
        data:
          message: "Сейф: подтверждён риск плесени (флаг уведомления поднят)."
          level: warning

  ############################################################################
  # СЕЙФ: подтв. НОРМА -> сбросить флаг (дальше телега отправит)
  ############################################################################
  - id: "strongbox_risk_resolved_confirm"
    alias: "Сейф: риск снят (подтверждение нормализации)"
    description: "Если safe_status=on устойчиво strongbox_resolve_min минут — сбросить флаг уведомления."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.strongbox_safe_status
        to: "on"
        for:
          minutes: "{{ states('input_number.strongbox_resolve_min') | int(20) }}"
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.strongbox_hum_text_notified
        state: "on"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.strongbox_hum_text_notified
      - service: system_log.write
        data:
          message: "Сейф: условия нормализованы (флаг уведомления сброшен)."
          level: info
