################################################################################
# /packages/room_hallway.yaml
################################################################################
#
# Этот пакет Home Assistant настроен для автоматизации освещения в прихожей,
# обеспечивая удобство и эффективность управления светом. Включает в себя
# автоматизации для реагирования на действия пользователя и изменения в
# окружающей среде, а также таймер для контроля продолжительности включения
# света.
#
# Доработки:
#   - Добавлен гистерезис (for: в триггерах) для стабильности.
#   - silent_mode/startup_phase во все релевантные автоматизации.
#   - Настраиваемый duration таймера и количество миганий via input_number.
#   - Логирование и проверки на someone_is_home/unavailable.
#
################################################################################

##############################################################################
#                             ВХОДНЫЕ БУЛЕВЫЕ ПЕРЕМЕННЫЕ
##############################################################################
input_boolean:
  hallway_first_door_open:
    name: "Первое открытие двери в прихожей"
    initial: off
    icon: mdi:door-open

input_number:
  hallway_timer_duration:
    name: "Продолжительность таймера прихожей (мин)"
    min: 1
    max: 5
    step: 0.5
    initial: 1.5
  hallway_blink_count:
    name: "Количество миганий при звонке"
    min: 1
    max: 5
    step: 1
    initial: 3

##############################################################################
#                                ТАЙМЕРЫ
##############################################################################
timer:
  timer_hallway:
    name: "Движение отсутствует"
    duration: "00:01:30"  # Базовое; при старте задаём динамически через data.duration

##############################################################################
#                             АВТОМАТИЗАЦИИ
##############################################################################
automation:
  # Вкл/выкл света кнопкой
  - id: "fc57ec27-9c9d-489a-8f5f-050b489466f7"
    alias: "Прихожая: Вкл/выкл света кнопкой"
    description: "Тоггл света по кнопке; после — старт/отмена таймера по факту."
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: cfd464e1cbfa3da2ddd4f2109d74eb4e
        type: action
        subtype: single
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - type: toggle
        device_id: 61c0ac07893316543e261176eb0cb5f9
        entity_id: 89add52cab26b9b6bcad7e86fd6387ec
        domain: light
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: light.hallway_switch
                    state: "on"
                  - condition: state
                    entity_id: light.gateway_light_04cf8c977cdd
                    state: "on"
            sequence:
              - service: timer.start
                target:
                  entity_id: timer.timer_hallway
                data:
                  duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
        default:
          - service: timer.cancel
            target:
              entity_id: timer.timer_hallway
      - service: system_log.write
        data:
          message: "Свет в прихожей toggled по кнопке."
          level: info

  # Включение освещения при открытии двери
  - id: "3c9a07a9-58ee-4287-87ee-734687c93bba"
    alias: "Прихожая: Включение освещения при открытии двери"
    description: "Включает свет при устойчиво открытой двери."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_door_contact
        to: "on"
        for:
          seconds: 5
    condition:
      - condition: state
        entity_id: light.hallway_switch
        state: "off"
      - condition: time
        after: "08:30:00"
        before: "23:00:00"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_door_contact') not in ['unknown','unavailable',''] }}"
    action:
      - service: light.turn_on
        target:
          entity_id: light.hallway_switch
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён по двери."
          level: info

  # Включение света по движению и низкой освещённости
  - id: "7f815fb8-98f4-437a-96fc-06984d9a4a25"
    alias: "Прихожая: Вкл света при движении и низкой освещенности"
    description: "Включает подсветку шлюза при движении и низкой освещённости."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "on"
        for:
          seconds: 10
    condition:
      - condition: numeric_state
        entity_id: sensor.illumination_04cf8c977cdd
        below: 250
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_motion_occupancy') not in ['unknown','unavailable',''] }}"
    action:
      - service: light.turn_on
        target:
          entity_id: light.gateway_light_04cf8c977cdd
        data:
          brightness_pct: 7
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён по движению."
          level: info

  # Запуск таймера при отсутствии движения
  - id: "3b6e37de-3b10-4201-afad-221dbe4cd4a0"
    alias: "Прихожая: Запуск таймера при отсутствии движения"
    description: "Стартует таймер, когда движение прекратилось."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "off"
        for:
          seconds: 10
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: light.hallway_switch
            state: "on"
          - condition: state
            entity_id: light.gateway_light_04cf8c977cdd
            state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Таймер прихожей запущен (отсутствие движения)."
          level: info

  # Перезапуск таймера при обнаружении движения
  - id: "479b917d-e4c2-4149-97e7-d12779b9f3ce"
    alias: "Прихожая: Перезапуск таймера при обнаружении движения"
    description: "Продлевает освещение при новом движении."
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_motion_occupancy
        to: "on"
        for:
          seconds: 5
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: light.hallway_switch
            state: "on"
          - condition: state
            entity_id: light.gateway_light_04cf8c977cdd
            state: "on"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - service: timer.cancel
        target:
          entity_id: timer.timer_hallway
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Таймер прихожей перезапущен (движение)."
          level: info

  # Выключение света по истечении таймера
  - id: "7f6bdbae-a73b-4509-8db8-43f71a3525ca"
    alias: "Прихожая: Выключение света по таймеру"
    description: "Выключает освещение по окончании таймера (кроме режима уборки)."
    mode: single
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_hallway
    condition:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: light.turn_off
        target:
          entity_id:
            - light.hallway_switch
            - light.gateway_light_04cf8c977cdd
      - service: system_log.write
        data:
          message: "Свет в прихожей выключен по таймеру."
          level: info

  # Включение света при первом открытии двери после прихода домой
  - id: "first-door-home-automation"
    alias: "Прихожая: Включение света при первом открытии двери после прихода домой"
    description: "Если человек только пришёл (менее 10 минут), первое открытие двери включает свет."
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.hallway_door_contact
        to: "on"
        for:
          seconds: 5
    condition:
      - condition: state
        entity_id: input_boolean.hallway_first_door_open
        state: "off"
      - condition: state
        entity_id: person.master
        state: "home"
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(states.person.master.last_changed)) < 600 }}"
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: template
        value_template: "{{ states('binary_sensor.hallway_door_contact') not in ['unknown','unavailable',''] }}"
    action:
      - service: light.turn_on
        target:
          entity_id: light.hallway_switch
      - service: light.turn_on
        target:
          entity_id: light.gateway_light_04cf8c977cdd
        data:
          brightness_pct: 100
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.hallway_first_door_open
      - service: timer.start
        target:
          entity_id: timer.timer_hallway
        data:
          duration: "{{ (states('input_number.hallway_timer_duration') | float(1.5) * 60) | int }}"
      - service: system_log.write
        data:
          message: "Свет в прихожей включён при первом входе."
          level: info

  # Сброс флага первого открытия двери при уходе пользователя
  - id: "reset-first-door-flag"
    alias: "Прихожая: Сброс флага первого открытия двери"
    description: "Сбрасывает флаг при уходе (not_home)."
    mode: single
    trigger:
      - platform: state
        entity_id: person.master
        to: "not_home"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.hallway_first_door_open
      - service: system_log.write
        data:
          message: "Флаг первого открытия двери сброшен (ушёл из дома)."
          level: info

  # Оповещение: звонок в дверь (TTS + мигание)
  - id: "37a7b942-71ea-456e-8f9e-1718c8c34a8d"
    alias: "Уведомление. Яндекс: Звонок в дверь"
    description: "Алиса произносит фразу и мигает светом при нажатии кнопки."
    mode: restart
    trigger:
      - platform: device
        domain: mqtt
        device_id: d2c3001cdc59660c456de45aec09da91
        type: action
        subtype: single
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
      - condition: state
        entity_id: binary_sensor.someone_is_home
        state: "on"
    action:
      - variables:
          was_on_led: "{{ is_state('light.working_room_led', 'on') }}"
      - service: script.yandex_tts_click_outdoor_button
      - repeat:
          count: "{{ states('input_number.hallway_blink_count') | int }}"
          sequence:
            - service: light.turn_on
              target:
                entity_id:
                  - light.gateway_light_04cf8c977cdd
                  - light.working_room_led
            - delay: "00:00:01"
            - service: light.turn_off
              target:
                entity_id:
                  - light.gateway_light_04cf8c977cdd
                  - light.working_room_led
            - delay: "00:00:01"
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ was_on_led }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.working_room_led
        default:
          - service: light.turn_off
            target:
              entity_id: light.working_room_led
      - service: system_log.write
        data:
          message: "Обработан звонок в дверь (мигание выполнено)."
          level: info

  # Оповещение: попытка снятия кнопки
  - id: "26345165-2c00-489c-af7b-c4b92110c937"
    alias: "Уведомление. Входную кнопку пытаются снять"
    description: "TTS + Telegram при встряхивании кнопки."
    mode: single
    trigger:
      - platform: device
        domain: mqtt
        device_id: d2c3001cdc59660c456de45aec09da91
        type: action
        subtype: shake
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
      - condition: state
        entity_id: input_boolean.silent_mode
        state: "off"
    action:
      - service: script.yandex_tts_shaking_outdoor_button
      - service: notify.master
        data:
          message: "⚠️ Внимание! Входную кнопку пытаются снять 🛑"
      - service: system_log.write
        data:
          message: "Обнаружена попытка снятия входной кнопки."
          level: warning