# /packages/room_bathroom.yaml #
################################

# Этот пакет конфигураций Home Assistant предназначен для автоматизации
# управления освещением, вентиляцией и другими устройствами в ванной комнате.
# Он включает в себя управление режимом уборки, контроль влажности и движения
# для оптимизации использования устройств и обеспечения комфорта.

# Входные параметры
# Режим уборки в ванной: позволяет активировать режим, при котором автоматизации
# освещения временно отключаются для удобства уборки.
input_boolean:
  bathroom_cleaning_mode:
    name: Режим уборки в ванной
    initial: off
    icon: mdi:broom

# Датчики
# Датчик влажности выше 60%: активируется при повышенной влажности, сигнализируя
# о необходимости включения вентиляции.
# Датчик влажности ниже 50%: указывает на достаточно низкий уровень влажности,
# при котором можно выключить вентиляцию.
# Открытие дверей в ванной: реагирует на открытие двери, что может быть
# использовано для контроля вентиляции и освещения.
# Движение в ванной: детектирует активность в помещении для управления
# освещением.

binary_sensor:
  - platform: template
    sensors:
      # Датчик влажности в ванной, активируется при влажности выше 60%
      bathroom_humidity_max:
        unique_id: bathroom_humidity_max
        friendly_name: "Влажность в ванной выше 60"
        device_class: problem
        value_template: >
          {% if states('sensor.0x00158d000462f814_humidity_2') is not none and states('sensor.0x00158d000462f814_humidity_2') != 'unknown' %}
            {{ (states('sensor.0x00158d000462f814_humidity_2') | float) > 60 }}
          {% else %}
            false
          {% endif %}

      # Датчик влажности в ванной, активируется при влажности ниже 50%
      bathroom_humidity_min:
        unique_id: bathroom_humidity_min
        friendly_name: "Влажность в ванной ниже 50"
        device_class: problem
        value_template: >
          {% if states('sensor.0x00158d000462f814_humidity_2') is not none and states('sensor.0x00158d000462f814_humidity_2') != 'unknown' %}
            {{ (states('sensor.0x00158d000462f814_humidity_2') | float) < 50 }}
          {% else %}
            false
          {% endif %}

      bathroom_open_door:
        unique_id: bathroom_open_door
        friendly_name: "Открытие дверей в ванной"
        value_template: >
          {{ is_state('binary_sensor.bathroom_door_inside_contact', 'on') or 
             is_state('binary_sensor.bathroom_door_outside_contact', 'on') }}

      bathroom_motions:
        unique_id: bathroom_motions
        friendly_name: "Движение в ванной"
        value_template: >
          {{ is_state('binary_sensor.0x00158d0006ebbef4_occupancy', 'on') or 
             is_state('binary_sensor.bathroom_motion_2_occupancy', 'on') }}

# Таймер
# Таймер ванной: используется для автоматического выключения света после
# заданного интервала времени без активности.
timer:
  timer_bathroom:
    name: "Движение отсутствует"
    duration: "00:07:53"

# Автоматизации
automation:
  # Включение и выключение вентилятора
  # Автоматически управляет работой вытяжки в зависимости от уровня влажности.

  - id: "dc1acbee-6ecd-45a4-8eae-ab69034c3117"
    alias: "Ванная: Вытяжка, включение."
    description: "Включение вентилятора при высокой влажности"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_max
        to: "on"
    action:
      - service: fan.turn_on
        entity_id: fan.bathroom_relay_l1

  - id: "6ebb6fa8-9cd1-4ebd-839d-44d175e6c319"
    alias: "Ванная: Вытяжка, выключение."
    description: "Выключение вентилятора при нормальной влажности"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_min
        to: "on"
    action:
      - service: fan.turn_off
        entity_id: fan.bathroom_relay_l1

  # Освещение
  # Вкл/выкл света кнопкой: позволяет управлять основным светом в ванной с
  # помощью физического выключателя.

  - id: "5525cbdc-3a8d-4464-908e-795c8205b40c"
    alias: "Ванная: Освещение, вкл/выкл с выключателя"
    trigger:
      - platform: device
        domain: mqtt
        device_id: cc6ef89720abb376a24e910e13f37902
        type: action
        subtype: single_left
    action:
      - service: light.toggle
        target:
          area_id: vannaia
      - choose:
          - conditions:
              - condition: state
                entity_id: light.bathroom_main
                state: "on"
            sequence:
              - service: timer.start
                target:
                  entity_id: timer.timer_bathroom

  # Включение света по движению
  # Активирует освещение при обнаружении движения, если освещенность низкая, и
  # запускает таймер для последующего выключения.
  - id: "0007279c-13b5-402b-9aef-bf264273fa90"
    alias: "Ванная: Освещение, вкл по движению, датчикам открытия и (пере)запуск таймера"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_open_door
        to: "on"
      - platform: state
        entity_id: binary_sensor.bathroom_motions
        to: "on"
    action:
      - service: light.turn_on
        target:
          area_id: vannaia
      - service: timer.start
        target:
          entity_id: timer.timer_bathroom

  # Выключение света по таймеру
  # Автоматически выключает свет по истечении установленного времени
  # бездействия, способствуя экономии энергии.
  - id: "b30b7ad8-6563-4279-a78f-1a113f9cb252"
    alias: "Ванная: Освещение, выключение по таймеру"
    condition:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_bathroom
    action:
      - service: light.turn_off
        target:
          area_id: vannaia
