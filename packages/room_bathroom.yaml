################################################################################
# /packages/room_bathroom.yaml
################################################################################
#
# Пакет для управления датчиками и вентиляцией ванной комнаты.
# Здесь собраны настройки и автоматизации для контроля состояния помещения,
# включая датчики движения, влажность и управление вентиляцией.
#
################################################################################

##############################################################################
#                              ГРУППА ДАТЧИКОВ
##############################################################################
group:
  bathroom_motion_sensors:
    name: "Датчики движения в ванной"
    entities:
      - binary_sensor.0x0ceff6fffe693347_occupancy
      - binary_sensor.0x00158d0006ebbef4_occupancy

##############################################################################
#                        СЕНСОР УСРЕДНЁННОЙ ВЛАЖНОСТИ
##############################################################################
sensor:
  - platform: filter
    name: "Влажность ванной (усреднённая за 1 минуту)"
    entity_id: sensor.bathroom_th_2_humidity
    unique_id: bathroom_filtered_humidity
    filters:
      - filter: time_simple_moving_average
        window_size: "00:01"
        precision: 2

##############################################################################
#                             ВХОДНЫЕ ПАРАМЕТРЫ
##############################################################################
input_number:
  bathroom_humidity_max_threshold:
    name: "Максимальный порог влажности в ванной"
    initial: 60
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"
  bathroom_humidity_min_threshold:
    name: "Минимальный порог влажности в ванной"
    initial: 50
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"

##############################################################################
#                                 БИНАРНЫЕ ДАТЧИКИ
##############################################################################
binary_sensor:
  - platform: template
    sensors:
      bathroom_humidity_max:
        unique_id: bathroom_humidity_max
        friendly_name: "Влажность в ванной выше порога"
        device_class: problem
        value_template: >
          {% set humidity = states('sensor.vlazhnost_vannoi_usrednennaia_za_5_minut') %}
          {% set threshold = states('input_number.bathroom_humidity_max_threshold') | float(0) %}
          {% if humidity in ['unknown', 'unavailable', 'none', ''] %}
            false
          {% else %}
            {{ (humidity | float(0)) > threshold }}
          {% endif %}

      bathroom_humidity_min:
        unique_id: bathroom_humidity_min
        friendly_name: "Влажность в ванной ниже порога"
        device_class: problem
        value_template: >
          {% set humidity = states('sensor.vlazhnost_vannoi_usrednennaia_za_5_minut') %}
          {% set threshold = states('input_number.bathroom_humidity_min_threshold') | float(0) %}
          {% if humidity in ['unknown', 'unavailable', 'none', ''] %}
            false
          {% else %}
            {{ (humidity | float(0)) < threshold }}
          {% endif %}

      bathroom_open_door:
        unique_id: bathroom_open_door
        friendly_name: "Открытие дверей в ванной"
        value_template: >
          {{ is_state('binary_sensor.bathroom_door_inside_contact', 'on') or
             is_state('binary_sensor.bathroom_door_outside_contact', 'on') }}
      bathroom_motions:
        unique_id: bathroom_motions
        friendly_name: "Движение в ванной"
        value_template: >
          {{ is_state('group.bathroom_motion_sensors', 'on') }}

  - platform: template
    sensors:
      no_activity_in_bathroom_recently:
        unique_id: no_activity_in_bathroom_recently
        friendly_name: "Недавняя активность в ванной отсутствует"
        value_template: >-
          {% set door = states.binary_sensor.bathroom_open_door %}
          {% set motion_off = is_state('group.bathroom_motion_sensors', 'off') %}
          {% if door is not none and door.last_changed is not none %}
            {{ motion_off and (as_timestamp(now()) - as_timestamp(door.last_changed)) > 900 }}
          {% else %}
            false
          {% endif %}

##############################################################################
#                                ТАЙМЕРЫ
##############################################################################
timer:
  bathroom_fan_cooldown:
    name: "Продув вентилятора"
    duration: "00:02:00"

##############################################################################
#                             АВТОМАТИЗАЦИИ
##############################################################################
automation:
  # --------------------------------------------------------------------------
  # Включение вентилятора при повышенной влажности
  # --------------------------------------------------------------------------
  - id: "dc1acbee-6ecd-45a4-8eae-ab69034c3117"
    alias: "Ванная: Вытяжка, включение."
    description: "Включение вентилятора при высокой усреднённой влажности в ванной."
    triggers:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_max
        to: "on"
    conditions:
      - condition: state
        entity_id: fan.bathroom_relay_l1
        state: "off"
    actions:
      - service: fan.turn_on
        target:
          entity_id: fan.bathroom_relay_l1

  # --------------------------------------------------------------------------
  # Запуск таймера для продува вентилятора при снижении влажности
  # --------------------------------------------------------------------------
  - id: "6ebb6fa8-9cd1-4ebd-839d-44d175e6c319"
    alias: "Ванная: Запуск таймера на продув по снижении влажности"
    description: "При снижении влажности ниже минимального порога запускается таймер на 2 минуты перед отключением вентилятора."
    triggers:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_min
        to: "on"
    actions:
      - service: timer.start
        target:
          entity_id: timer.bathroom_fan_cooldown

  # --------------------------------------------------------------------------
  # Выключение вентилятора по истечении таймера продува
  # --------------------------------------------------------------------------
  - id: "7a1db18b-0366-47cf-8260-6109b01447f9"
    alias: "Ванная: Выключение вентилятора по окончании продува"
    description: "После истечения таймера bathroom_fan_cooldown вентилятора автоматически выключают."
    triggers:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.bathroom_fan_cooldown
    actions:
      - service: fan.turn_off
        target:
          entity_id: fan.bathroom_relay_l1
