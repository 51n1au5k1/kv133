# /packages/room_bathroom.yaml #
################################

# Этот пакет конфигураций Home Assistant предназначен для автоматизации
# управления освещением, вентиляцией и другими устройствами в ванной комнате.
# Он включает в себя управление режимом уборки, контроль влажности и движения
# для оптимизации использования устройств и обеспечения комфорта.

# Входные параметры
input_number:
  bathroom_humidity_max_threshold:
    name: "Максимальный порог влажности в ванной"
    initial: 60
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"
  bathroom_humidity_min_threshold:
    name: "Минимальный порог влажности в ванной"
    initial: 50
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"

# Датчики
binary_sensor:
  - platform: template
    sensors:
      # Датчик влажности в ванной, активируется при влажности выше максимального порога
      bathroom_humidity_max:
        unique_id: bathroom_humidity_max
        friendly_name: "Влажность в ванной выше порога"
        device_class: problem
        value_template: >
          {% if states('sensor.0x00158d000462f814_humidity_2') is not none and states('sensor.0x00158d000462f814_humidity_2') != 'unknown' %}
            {{ (states('sensor.0x00158d000462f814_humidity_2') | float) > (states('input_number.bathroom_humidity_max_threshold') | float) }}
          {% else %}
            false
          {% endif %}

      # Датчик влажности в ванной, активируется при влажности ниже минимального порога
      bathroom_humidity_min:
        unique_id: bathroom_humidity_min
        friendly_name: "Влажность в ванной ниже порога"
        device_class: problem
        value_template: >
          {% if states('sensor.0x00158d000462f814_humidity_2') is not none and states('sensor.0x00158d000462f814_humidity_2') != 'unknown' %}
            {{ (states('sensor.0x00158d000462f814_humidity_2') | float) < (states('input_number.bathroom_humidity_min_threshold') | float) }}
          {% else %}
            false
          {% endif %}

      bathroom_open_door:
        unique_id: bathroom_open_door
        friendly_name: "Открытие дверей в ванной"
        value_template: >
          {{ is_state('binary_sensor.bathroom_door_inside_contact', 'on') or 
             is_state('binary_sensor.bathroom_door_outside_contact', 'on') }}

      bathroom_motions:
        unique_id: bathroom_motions
        friendly_name: "Движение в ванной"
        value_template: >
          {{ is_state('binary_sensor.0x0ceff6fffe693347_occupancy', 'on') or
             is_state('binary_sensor.0x00158d0006ebbef4_occupancy', 'on') }}

      no_activity_in_bathroom_recently:
        friendly_name: "Недавняя активность в ванной отсутствует"
        value_template: >-
          {{ is_state('binary_sensor.bathroom_motion_sensor', 'off')
             and (as_timestamp(now()) - as_timestamp(states.binary_sensor.bathroom_door_sensor.last_changed) > 900) }}

# Таймер
timer:
  timer_bathroom:
    name: "Движение отсутствует"
    duration: "00:03:00"

# Автоматизации
automation:
  - id: "dc1acbee-6ecd-45a4-8eae-ab69034c3117"
    alias: "Ванная: Вытяжка, включение."
    description: "Включение вентилятора при высокой влажности"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_max
        to: "on"
    condition:
      - condition: state
        entity_id: fan.bathroom_relay_l1
        state: "off"
    action:
      - service: fan.turn_on
        entity_id: fan.bathroom_relay_l1

  - id: "6ebb6fa8-9cd1-4ebd-839d-44d175e6c319"
    alias: "Ванная: Вытяжка, выключение."
    description: "Выключение вентилятора при нормальной влажности"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_humidity_min
        to: "on"
    action:
      - service: fan.turn_off
        entity_id: fan.bathroom_relay_l1

  - id: "5525cbdc-3a8d-4464-908e-795c8205b40c"
    alias: "Ванная: Освещение, вкл/выкл с выключателя"
    trigger:
      - platform: device
        domain: mqtt
        device_id: cc6ef89720abb376a24e910e13f37902
        type: action
        subtype: single_left
    action:
      - service: light.toggle
        target:
          area_id: vannaia
      - choose:
          - conditions:
              - condition: state
                entity_id: light.bathroom_main
                state: "on"
            sequence:
              - service: timer.start
                target:
                  entity_id: timer.timer_bathroom

  - id: "0007279c-13b5-402b-9aef-bf264273fa90"
    alias: "Ванная: Освещение, вкл по движению и датчикам открытия"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_open_door
        to: "on"
      - platform: state
        entity_id: binary_sensor.bathroom_motions
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: light.turn_on
        target:
          area_id: vannaia
    mode: restart

  - id: "50323f55-c6dd-483a-8799-af3c57e3e363"
    alias: "Ванная: Отмена таймера при обнаружении движения"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motions
        to: "on"
    condition:
      - condition: state
        entity_id: timer.timer_bathroom
        state: "active"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: timer.cancel
        entity_id: timer.timer_bathroom
    mode: single

  - id: "e519fa4c-bbad-4b0d-b06c-8521b3b10131"
    alias: "Ванная: Запуск таймера при отсутствии движения"
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_motions
        to: "off"
        for:
          minutes: 1
    condition:
      - condition: state
        entity_id: light.bathroom_main
        state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: timer.start
        entity_id: timer.timer_bathroom
    mode: single

  - id: "b30b7ad8-6563-4279-a78f-1a113f9cb252"
    alias: "Ванная: Освещение, выключение по таймеру"
    description: "Автоматически выключает свет по истечении установленного времени бездействия, не срабатывает в режиме уборки."
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_bathroom
    condition:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"
    action:
      - service: light.turn_off
        target:
          area_id: vannaia
    mode: single
