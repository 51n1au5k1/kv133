# packages/telegram_bot.yaml
# ====================================================================
# –ü–∞–∫–µ—Ç: Telegram Bot –¥–ª—è Home Assistant
# ====================================================================
# –≠—Ç–æ—Ç –ø–∞–∫–µ—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–º–Ω—ã–º –¥–æ–º–æ–º —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞.
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É –∏ –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π
# —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –∫–æ–º–Ω–∞—Ç.
#
# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤–∫–ª—é—á–∞–µ—Ç:
# - –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–º–µ—â–µ–Ω–∏–π (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –≤–ª–∞–∂–Ω–æ—Å—Ç—å, CO‚ÇÇ –∏ —Ç. –¥.).
# - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º, —Ä–æ–∑–µ—Ç–∫–∞–º–∏, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–µ–π –∏ –¥—Ä—É–≥–∏–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏.
# - –ö–æ–Ω—Ç—Ä–æ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Å–µ—Ç–∏ (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –ø–∏–Ω–≥, —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞).
# - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ Home Assistant –∏–∑ Telegram.
#
# ====================================================================
# –ü–æ—á–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã?
# ====================================================================
# –í –ø–∞–∫–µ—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å
# —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç:
# - –ò–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è—Ö.
# - –£–ø—Ä–æ—Å—Ç–∏—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è,
#   –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–∫—Ä–∏–ø—Ç.
# - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π.
#
# –ü—Ä–∏–º–µ—Ä:
# –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤ –∫–∞–∂–¥–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å
# —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –º—ã —Å–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω —Å–∫—Ä–∏–ø—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, `send_livingroom_status`),
# –∞ –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ –≤–æ –≤—Å–µ—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è—Ö.
#
# ====================================================================
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–∫–µ—Ç–∞:
# ====================================================================
# script:
#   - –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ Telegram.
#
# automation:
#   - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫.
#   - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
#
# ====================================================================
# –†–∞–∑–¥–µ–ª—ã –º–µ–Ω—é Telegram:
# ====================================================================
# /main_menu       - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# /livingroom_control - –ì–æ—Å—Ç–∏–Ω–∞—è
# /kitchen_control  - –ö—É—Ö–Ω—è
# /workroom_control - –†–∞–±–æ—á–∏–π –∫–∞–±–∏–Ω–µ—Ç
# /bedroom_control - –°–ø–∞–ª—å–Ω—è
# /bathroom_control   - –í–∞–Ω–Ω–∞—è
# /hallway_control - –ü—Ä–∏—Ö–æ–∂–∞—è
# /system_control  - –°–∏—Å—Ç–µ–º–∞ (—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Å–µ—Ç–∏)
# /pve_status_refresh - –°–∏—Å—Ç–µ–º–∞ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ Proxmox Virtual Environment
#
# ====================================================================
# –°–ø–µ—Ü–∏—Ñ–∏–∫–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
# ====================================================================
# - –ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ Telegram —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
#   —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–≤–∞–ª—Å—è —á–∏—Å—Ç—ã–º –∏ —É–¥–æ–±–Ω—ã–º.
# - –í –æ—Ç–≤–µ—Ç–∞—Ö –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å
#   –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
# - –í —Å–ª—É—á–∞–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ (—Å–≤–µ—Ç, —Ä–æ–∑–µ—Ç–∫–∏)
#   –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π
#   —Å—Ç–∞—Ç—É—Å.
#
# ====================================================================
# –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏:
# ====================================================================
# - –ó–∞–ø—É—Å–∫–∞–µ—Ç `homeassistant.restart`, –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—è HA.
# - –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
# - –í–∫–ª—é—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
#
# ====================================================================

script:
  send_main_menu:
    alias: "Send Main Menu"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üíª –í—ã–±—Ä–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è :</b>
          inline_keyboard: >
            {{ [
                [ ["üè† –ì–æ—Å—Ç–∏–Ω–∞—è", "/livingroom_control"], ["üçΩ –ö—É—Ö–Ω—è", "/kitchen_control"] ],
                [ ["üè¢ –†–∞–±–æ—á–∏–π –∫–∞–±–∏–Ω–µ—Ç", "/workroom_control"], ["üõè –°–ø–∞–ª—å–Ω—è", "/bedroom_control"] ],
                [ ["üõÅ –í–∞–Ω–Ω–∞—è", "/bathroom_control"], ["üö™ –ö–æ—Ä–∏–¥–æ—Ä", "/hallway_control"] ],
                [ ["üñ• –°–∏—Å—Ç–µ–º–∞", "/system_control"] ]
              ] | tojson }}

  send_livingroom_status:
    alias: "Send Living Room Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üè† –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π:</b>
            <b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.livingroom_climat_sensor_temperature') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.livingroom_climat_sensor_humidity') }}%
            <b>üåø CO‚ÇÇ:</b> {{ states('sensor.co2_monitor_co2') }} ppm
            <b>üí® PM2.5:</b> {{ states('sensor.zhimi_mb3_a5d3_pm25') }} ¬µg/m¬≥
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–µ–π:</b> {% if is_state('binary_sensor.gostinaia_balkon_contact', 'on') or is_state('binary_sensor.0x00158d0003ce9922_contact', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ –õ—é—Å—Ç—Ä–∞" if is_state("light.livingroom_main_switch_left", "off") else "üü¢ –õ—é—Å—Ç—Ä–∞", "/toggle_livingroom_main_switch_left"],
                  ["üî¥ –°–≤–µ—Ç –Ω–∞–¥ –¥–∏–≤–∞–Ω–æ–º" if is_state("light.livingroom_main_switch_right", "off") else "üü¢ –°–≤–µ—Ç –Ω–∞–¥ –¥–∏–≤–∞–Ω–æ–º", "/toggle_livingroom_main_switch_right"] ],
                [ ["üî¥ –ë—Ä–∞" if is_state("light.livingroom_scone_dimmer", "off") else "üü¢ –ë—Ä–∞", "/toggle_livingroom_scone_dimmer"] ],
                [ ["üî¥ –£–≥–ª–æ–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞" if is_state("switch.livingroom_socket_corner_r", "off") else "üü¢ –£–≥–ª–æ–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞", "/toggle_livingroom_socket_corner_r"],
                  ["üî¥ –õ–µ–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞" if is_state("switch.livingroom_socket_l", "off") else "üü¢ –õ–µ–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞", "/toggle_livingroom_socket_l"],
                  ["üî¥ –ü—Ä–∞–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞" if is_state("switch.livingroom_socket_r", "off") else "üü¢ –ü—Ä–∞–≤–∞—è —Ä–æ–∑–µ—Ç–∫–∞", "/toggle_livingroom_socket_r"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/livingroom_control"] ]
              ] | tojson }}

  send_workroom_status:
    alias: "Send Workroom Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üè¢ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ä–∞–±–æ—á–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ:</b>
            <b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.cgllc_cn_blt_3_15gd8656slo00_dove_temperature_p_2_1') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.cgllc_cn_blt_3_15gd8656slo00_dove_relative_humidity_p_2_2') }}%
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–∏:</b> {% if is_state('binary_sensor.masterskaia_balkon_contact', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ –û—Å–Ω–æ–≤–Ω–æ–π —Å–≤–µ—Ç" if is_state("light.workroom_switch", "off") else "üü¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–≤–µ—Ç", "/toggle_workroom_light"],
                  ["üî¥ –ü–æ–¥—Å–≤–µ—Ç–∫–∞" if is_state("light.working_room_led", "off") else "üü¢ –ü–æ–¥—Å–≤–µ—Ç–∫–∞", "/toggle_workroom_led"] ],
                [ ["üî¥ –†–æ–∑–µ—Ç–∫–∞ –æ—Ç–ø–∞—Ä–∏–≤–∞—Ç–µ–ª—è" if is_state("switch.smart_plug_in_unit_vykliuchatel", "off") else "üü¢ –†–æ–∑–µ—Ç–∫–∞ –æ—Ç–ø–∞—Ä–∏–≤–∞—Ç–µ–ª—è", "/toggle_workroom_plug"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/workroom_control"] ]
              ] | tojson }}

  send_bedroom_status:
    alias: "Send Bedroom Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üõè –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Å–ø–∞–ª—å–Ω–µ:</b>
            <b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.bedroom_th_sensor_temperature') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.bedroom_th_sensor_humidity') }}%
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–∏:</b> {% if is_state('binary_sensor.0x00158d00044d5d11_contact', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ –û—Å–Ω–æ–≤–Ω–æ–π —Å–≤–µ—Ç" if is_state("light.bedroom_switch_main", "off") else "üü¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–≤–µ—Ç", "/toggle_bedroom_light"] ],
                [ ["üî¥ –¢–∞–Ω–∏–Ω —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫" if is_state("light.bedroom_left_switch_right", "off") else "üü¢ –¢–∞–Ω–∏–Ω —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫", "/toggle_bedroom_scone_t"] ],
                [ ["üî¥ –ê–Ω–¥—Ä–µ–µ–≤ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫ –º–∞–ª—ã–π" if is_state("light.bedroom_right_switch_left", "off") else "üü¢ –ê–Ω–¥—Ä–µ–µ–≤ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫ –º–∞–ª—ã–π", "/toggle_bedroom__scone_a_small"],
                  ["üî¥ –ê–Ω–¥—Ä–µ–µ–≤ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫ –±–æ–ª—å—à–æ–π" if is_state("light.bedroom_right_switch_right", "off") else "üü¢ –ê–Ω–¥—Ä–µ–µ–≤ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫ –±–æ–ª—å—à–æ–π", "/toggle_bedroom__scone_a_big"] ],
                [ ["üî¥ –†–æ–∑–µ—Ç–∫–∞ –¢–∞–Ω–∏" if is_state("switch.0x00158d0002530bd9", "off") else "üü¢ –†–æ–∑–µ—Ç–∫–∞ –¢–∞–Ω–∏", "/toggle_bedroom_plug_left"],
                  ["üî¥ –†–æ–∑–µ—Ç–∫–∞ –ê–Ω–¥—Ä–µ—è" if is_state("switch.0x00158d0002530ba3", "off") else "üü¢ –†–æ–∑–µ—Ç–∫–∞ –ê–Ω–¥—Ä–µ—è", "/toggle_bedroom_plug_right"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/bedroom_control"] ]
              ] | tojson }}

  send_bathroom_status:
    alias: "Send Bathroom Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üõÅ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –≤–∞–Ω–Ω–æ–π:</b>
            <b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.bathroom_th_2_temperature') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.bathroom_th_2_humidity') }}%
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–∏:</b> {% if is_state('binary_sensor.bathroom_open_door', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
            <b>üß∫ –°—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞:</b> {% if is_state('binary_sensor.washing_machine_active', 'on') %}üü¢ –†–∞–±–æ—Ç–∞–µ—Ç{% else %}üî¥ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ –í–µ—Å—å —Å–≤–µ—Ç" if is_state("light.light_bathroom", "off") else "üü¢ –í–µ—Å—å —Å–≤–µ—Ç", "/toggle_bathroom_light"] ],
                [ ["üî¥ –í—ã—Ç—è–∂–∫–∞" if is_state("fan.bathroom_relay_l1", "off") else "üü¢ –í—ã—Ç—è–∂–∫–∞", "/toggle_bathroom_fan"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/bathroom_control"] ]
              ] | tojson }}

  send_kitchen_status:
    alias: "Send Kitchen Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üõÅ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –∫—É—Ö–Ω–µ:</b>
            <b>–í—ã—Ç—è–∂–∫–∞:</b>
            <b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.kitchen_th_temperature') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.kitchen_th_humidity') }}%
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–∏:</b> {% if is_state('binary_sensor.0x00158d0003ce9922_contact', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ –û—Å–Ω–æ–≤–Ω–æ–π" if is_state("light.kitchen_main_light", "off") else "üü¢ –û—Å–Ω–æ–≤–Ω–æ–π", "/toggle_kitchen_main_light"] ],
                [ ["üî¥ –ü–æ–¥—Å–≤–µ—Ç–∫–∞" if is_state("switch.kitchen_fartuh", "off") else "üü¢ –ü–æ–¥—Å–≤–µ—Ç–∫–∞", "/toggle_kithcen_fartuh"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/kitchen_control"] ]
              ] | tojson }}

  send_hallway_status:
    alias: "Send Hallway Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üö™ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –ø—Ä–∏—Ö–æ–∂–µ–π:</b>
            <b>üö™ –°—Ç–∞—Ç—É—Å –¥–≤–µ—Ä–∏:</b> {% if is_state('binary_sensor.hallway_door_contact', 'on') %}–û—Ç–∫—Ä—ã—Ç–∞{% else %}–ó–∞–∫—Ä—ã—Ç–∞{% endif %}
          inline_keyboard: >
            {{ [
                [ ["üî¥ C–≤–µ—Ç" if is_state("light.hallway_switch", "off") else "üü¢ –°–≤–µ—Ç", "/toggle_hallway_light"] ],
                [ ["üî¥ –®–ª—é–∑" if is_state("light.gateway_light_04cf8c977cdd", "off") else "üü¢ –®–ª—é–∑", "/toggle_hallway_gateway_light"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/hallway_control"] ]
              ] | tojson }}

  send_system_status:
    alias: "Send System Status"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üñ• –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã:</b>
            <b>üå° –ö–ª–∏–º–∞—Ç –æ–∫–æ–ª–æ —Å–µ—Ä–≤–µ—Ä–∞:</b>
            <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {{ states('sensor.0xa4c13861a18df7c8_temperature') }}¬∞C
            <b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {{ states('sensor.0xa4c13861a18df7c8_humidity') }}%

            <b>üåç –°–∫–æ—Ä–æ—Å—Ç—å —Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç:</b>
            <b>üì° –ü–∏–Ω–≥:</b> {{ states('sensor.speedtest_ping') }} ms
            <b>‚¨áÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞:</b> {{ states('sensor.speedtest_download') }} Mbps
            <b>‚¨ÜÔ∏è –ü–µ—Ä–µ–¥–∞—á–∞:</b> {{ states('sensor.speedtest_upload') }} Mbps
          inline_keyboard: >
            {{ [
                [ ["üî¥ –†–æ—É—Ç–µ—Ä" if is_state("switch.my_multi_outlet_left", "off") else "üü¢ –†–æ—É—Ç–µ—Ä", "/toggle_router_socket"],
                  ["üî¥ –ú–∏–Ω–∏–ü–ö" if is_state("switch.my_multi_outlet_right", "off") else "üü¢ –ú–∏–Ω–∏–ü–ö", "/toggle_minipc_socket"] ],
                [ ["üî¥ –ü–∏—Ç–∞–Ω–∏–µ –≤–∞–Ω–Ω–æ–π" if is_state("light.bathroom_main", "off") else "üü¢ –ü–∏—Ç–∞–Ω–∏–µ –≤–∞–Ω–Ω–æ–π", "/toggle_bathroom_power"] ],
                [ ["üî¥ –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã" if is_state("input_boolean.silent_mode", "off") else "üü¢ –†–µ–∂–∏–º —Ç–∏—à–∏–Ω—ã", "/toggle_silent_mode"] ],
                [ ["üî¥ –†–µ–∂–∏–º Force CCTV Off" if is_state("input_boolean.force_camera_off", "off") else "üü¢ –†–µ–∂–∏–º Force CCTV Off", "/toggle_force_cctv_mode"] ],
                [ ["‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏", "/pve_status_refresh"] ],
                [ ["‚ö†Ô∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É", "/force_reboot"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"], ["‚Üª –û–±–Ω–æ–≤–∏—Ç—å", "/system_control"] ]
              ] | tojson }}

  send_pve_status:
    alias: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å PVE"
    sequence:
      - service: telegram_bot.send_message
        data:
          target: "{{ target }}"
          parse_mode: html
          message: |
            <b>üñ• –°—Ç–∞—Ç—É—Å –Ω–æ–¥ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤</b>

            <b>üìä –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –í–ú:</b> {{ states('sensor.node_pve_virtual_machines_running') }}
            <b>üìä –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:</b> {{ states('sensor.node_pve_containers_running') }}

            <b>üî• –ù–∞–≥—Ä—É–∑–∫–∞ CPU:</b>
            <b>VM HAOS12:</b> {{ (states('sensor.qemu_haos12_3_100_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.qemu_haos12_3_100_cpu_used') | float | round(0)) }}%
            <b>LXC MariaDB:</b> {{ (states('sensor.lxc_mariadb_101_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.lxc_mariadb_101_cpu_used') | float | round(0)) }}%
            <b>LXC Jackett:</b> {{ (states('sensor.lxc_jackett_102_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.lxc_jackett_102_cpu_used') | float | round(0)) }}%
            <b>LXC Jellyfin:</b> {{ (states('sensor.lxc_jellyfin_103_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.lxc_jellyfin_103_cpu_used') | float | round(0)) }}%
            <b>LXC Deluge:</b> {{ (states('sensor.lxc_deluge_104_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.lxc_deluge_104_cpu_used') | float | round(0)) }}%
            <b>LXC TorrServer:</b> {{ (states('sensor.lxc_debian_105_cpu_used_normalized') | float | round(0)) }}% | {{ (states('sensor.lxc_debian_105_cpu_used') | float | round(0)) }}%

          inline_keyboard: >
            {{ [
                [ ["üîÑ –û–±–Ω–æ–≤–∏—Ç—å", "/pve_status_refresh"] ],
                [ ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å HAOS12", "/reboot_haos12"] ],
                [ ["üü¢ MariaDB", "/start_mariadb"], ["üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "/stop_mariadb"], ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "/reboot_mariadb"] ],
                [ ["üü¢ Jackett", "/start_jackett"], ["üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "/stop_jackett"], ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "/reboot_jackett"] ],
                [ ["üü¢ Jellyfin", "/start_jellyfin"], ["üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "/stop_jellyfin"], ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "/reboot_jellyfin"] ],
                [ ["üü¢ Deluge", "/start_deluge"], ["üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "/stop_deluge"], ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "/reboot_deluge"] ],
                [ ["üü¢ TorrServer", "/start_torrserver"], ["üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "/stop_torrserver"], ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞", "/reboot_torrserver"] ],
                [ ["üëà –í –º–µ–Ω—é", "/menu_back"] ]
              ] | tojson }}
##############################################################################
#                             –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò
##############################################################################
automation:
  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã /start)
  - id: "telegram_bot_start"
    alias: "Telegram Bot Start (–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/start"
    actions:
      - service: telegram_bot.send_message
        data:
          target: "{{ trigger.event.data.chat_id }}"
          parse_mode: html
          message: "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–º–Ω—ã–π –¥–æ–º!</b>"
      - service: script.send_main_menu
        data:
          target: "{{ trigger.event.data.chat_id }}"

  ##############################################################################
  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
  ##############################################################################
  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã /main_menu)
  - id: "telegram_bot_main_menu"
    alias: "Telegram Bot Main Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_command
        event_data:
          command: "/main_menu"
    actions:
      - service: script.send_main_menu
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í –º–µ–Ω—é"
  - id: "telegram_bot_menu_back"
    alias: "Telegram Bot Menu Back"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/menu_back"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_main_menu
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–ì–æ—Å—Ç–∏–Ω–∞—è"
  - id: "telegram_bot_livingroom_control"
    alias: "Telegram Bot Living Room Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/livingroom_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_livingroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–†–∞–±–æ—á–∏–π –∫–∞–±–∏–Ω–µ—Ç"
  - id: "telegram_bot_workroom_control"
    alias: "Telegram Bot Workroom Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/workroom_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_workroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–°–ø–∞–ª—å–Ω—è"
  - id: "telegram_bot_bedroom_control"
    alias: "Telegram Bot Bedroom Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/bedroom_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–ö—É—Ö–Ω—è"
  - id: "telegram_bot_kitchen_control"
    alias: "Telegram Bot Kitchen Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/kitchen_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_kitchen_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–í–∞–Ω–Ω–∞—è"
  - id: "telegram_bot_bathroom_control"
    alias: "Telegram Bot Bathroom Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/bathroom_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bathroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–ü—Ä–∏—Ö–æ–∂–∞—è"
  - id: "telegram_bot_hallway_control"
    alias: "Telegram Bot Hallway Menu"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/hallway_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_hallway_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

          # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—é "–°–∏—Å—Ç–µ–º–∞"
  - id: "telegram_bot_system_control"
    alias: "Telegram Bot System Control"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/system_control"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –ì–æ—Å—Ç–∏–Ω–∞—è
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ª—é—Å—Ç—Ä—ã –≤ –≥–æ—Å—Ç–∏–Ω–æ–π
  - id: "telegram_bot_toggle_livingroom_main_switch_left"
    alias: "Telegram Bot Toggle Livingroom Main Switch Left"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_livingroom_main_switch_left"
    actions:
      - service: light.toggle
        entity_id: light.livingroom_main_switch_left
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_livingroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –Ω–∞–¥ –¥–∏–≤–∞–Ω–æ–º –≤ –≥–æ—Å—Ç–∏–Ω–æ–π
  - id: "telegram_bot_toggle_livingroom_main_switch_right"
    alias: "Telegram Bot Toggle Livingroom Main Switch Right"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_livingroom_main_switch_right"
    actions:
      - service: light.toggle
        entity_id: light.livingroom_main_switch_right
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_livingroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±—Ä–∞ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π
  - id: "telegram_bot_toggle_livingroom_scone_dimmer"
    alias: "Telegram Bot Toggle Livingroom Main Scone"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_livingroom_scone_dimmer"
    actions:
      - service: light.toggle
        entity_id: light.livingroom_scone_dimmer
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_livingroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –ö–∞–±–∏–Ω–µ—Ç
  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Ä–∞–±–æ—á–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Ä–∞–±–æ—á–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ
  - id: "telegram_bot_toggle_workroom_light"
    alias: "Telegram Bot Toggle Workroom Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_workroom_light"
    actions:
      - service: light.toggle
        entity_id: light.workroom_switch
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_workroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Å—Ç–æ–ª–∞ –≤ —Ä–∞–±–æ—á–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ
  - id: "telegram_bot_toggle_workroom_led"
    alias: "Telegram Bot Toggle Workroom LED"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_workroom_led"
    actions:
      - service: light.toggle
        entity_id: light.working_room_led
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_workroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∏ –≤ —Ä–∞–±–æ—á–µ–º –∫–∞–±–∏–Ω–µ—Ç–µ
  - id: "telegram_bot_toggle_workroom_plug"
    alias: "Telegram Bot Toggle Workroom Plug"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_workroom_plug"
    actions:
      - service: switch.toggle
        entity_id: switch.smart_plug_in_unit_vykliuchatel
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_workroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –°–ø–∞–ª—å–Ω—è
  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ —Å–ø–∞–ª—å–Ω–µ
  ##############################################################################

  # 1.1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom_light"
    alias: "Telegram Bot Toggle Bedroom Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_light"
    actions:
      - service: light.toggle
        entity_id: light.bedroom_switch_main
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 1.2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∞ –¢–∞—Ç—å—è–Ω—ã –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom_scone_t"
    alias: "Telegram Bot Toggle Bedroom Tatiana's Scone"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_scone_t"
    actions:
      - service: light.toggle
        entity_id: light.bedroom_left_switch_right
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 1.3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom_scone_a_small"
    alias: "Telegram Bot Toggle Bedroom Andrei's Scone Small"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_scone_a_small"
    actions:
      - service: light.toggle
        entity_id: light.bedroom_right_switch_left
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 1.4. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom__scone_a_big"
    alias: "Telegram Bot Toggle Bedroom Andrei's Scone Big"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_scone_a_big"
    actions:
      - service: light.toggle
        entity_id: light.bedroom_right_switch_right
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∏ –¢–∞–Ω–∏ –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom_plug_left"
    alias: "Telegram Bot Toggle Bedroom Plug Left"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_plug_left"
    actions:
      - service: switch.toggle
        entity_id: switch.0x00158d0002530bd9
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∏ –ê–Ω–¥—Ä–µ—è –≤ —Å–ø–∞–ª—å–Ω–µ
  - id: "telegram_bot_toggle_bedroom_plug_right"
    alias: "Telegram Bot Toggle Bedroom Plug Right"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bedroom_plug_right"
    actions:
      - service: switch.toggle
        entity_id: switch.0x00158d0002530ba3
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bedroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –ö—É—Ö–Ω—è
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–≤–µ—Ç–∞ –Ω–∞ –∫—É—Ö–Ω–µ
  - id: "telegram_bot_toggle_kitchen_main_light"
    alias: "Telegram Bot Toggle Kitchen Main Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_kitchen_main_light"
    actions:
      - service: light.toggle
        entity_id: light.kitchen_main_light
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_kitchen_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ (—Ñ–∞—Ä—Ç—É–∫) –Ω–∞ –∫—É—Ö–Ω–µ
  - id: "telegram_bot_toggle_kitchen_fartuh"
    alias: "Telegram Bot Toggle Kitchen Fartuh"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_kithcen_fartuh"
    actions:
      - service: switch.toggle
        entity_id: switch.kitchen_fartuh
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_kitchen_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –í–∞–Ω–Ω–∞—è
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ —Å–≤–µ—Ç–∞ –≤ –≤–∞–Ω–Ω–æ–π
  - id: "telegram_bot_toggle_bathroom_light"
    alias: "Telegram Bot Toggle Bathroom Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bathroom_light"
    actions:
      - service: light.toggle
        entity_id: light.light_bathroom
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bathroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –≤ –≤–∞–Ω–Ω–æ–π
  - id: "telegram_bot_toggle_bathroom_fan"
    alias: "Telegram Bot Toggle Bathroom Fan"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bathroom_fan"
    actions:
      - service: fan.toggle
        entity_id: fan.bathroom_relay_l1
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_bathroom_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –ü—Ä–∏—Ö–æ–∂–∞—è
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –≤ –ø—Ä–∏—Ö–æ–∂–µ–π
  - id: "telegram_bot_toggle_hallway_light"
    alias: "Telegram Bot Toggle Hallway Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_hallway_light"
    actions:
      - service: light.toggle
        entity_id: light.hallway_switch
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_hallway_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–ª—é–∑–∞ –≤ –ø—Ä–∏—Ö–æ–∂–µ–π
  - id: "telegram_bot_toggle_hallway_gateway_light"
    alias: "Telegram Bot Toggle Hallway Gateway Light"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_hallway_gateway_light"
    actions:
      - service: light.toggle
        entity_id: light.gateway_light_04cf8c977cdd
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_hallway_status
        data:
          target: "{{ trigger.event.data.chat_id }}"
  ##############################################################################
  # –°–∏—Å—Ç–µ–º–∞
  ##############################################################################
  # 1. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞
  - id: "telegram_bot_toggle_router_socket"
    alias: "Telegram Bot Toggle Router Socket"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_router_socket"
    actions:
      - service: switch.toggle
        entity_id: switch.my_multi_outlet_left
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 2. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–∑–µ—Ç–∫–∏ –º–∏–Ω–∏–ü–ö
  - id: "telegram_bot_toggle_minipc_socket"
    alias: "Telegram Bot Toggle MiniPC Socket"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_minipc_socket"
    actions:
      - service: switch.toggle
        entity_id: switch.my_multi_outlet_right
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –≤ –≤–∞–Ω–Ω–æ–π
  - id: "telegram_bot_toggle_bathroom_power"
    alias: "Telegram Bot Toggle Bathroom Power"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_bathroom_power"
    actions:
      - service: light.toggle
        entity_id: light.bathroom_main
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 4. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ç–∏—à–∏–Ω—ã
  - id: "telegram_bot_toggle_silent_mode"
    alias: "Telegram Bot Toggle Silent Mode"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_silent_mode"
    actions:
      - service: input_boolean.toggle
        entity_id: input_boolean.silent_mode
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 5. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–∞–º–µ—Ä
  - id: "telegram_bot_toggle_force_cctv_mode"
    alias: "Telegram Bot Toggle Force CCTV Off Mode"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/toggle_force_cctv_mode"
    actions:
      - service: input_boolean.toggle
        entity_id: input_boolean.force_camera_off
      - delay:
          milliseconds: 200
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_system_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # 6. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã
  - id: "telegram_bot_force_reboot"
    alias: "Telegram Bot Force Reboot"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/force_reboot"
    actions:
      - service: telegram_bot.send_message
        data:
          target: "{{ trigger.event.data.chat_id }}"
          parse_mode: html
          message: "<b>‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥!</b>"
      - delay:
          seconds: 5
      - service: homeassistant.restart
  ##############################################################################
  # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ Proxmox
  ##############################################################################
  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ PVE
  - id: "telegram_bot_pve_status_refresh"
    alias: "Telegram Bot PVE Status Refresh"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/pve_status_refresh"
    actions:
      - service: telegram_bot.delete_message
        data:
          message_id: "{{ trigger.event.data.message.message_id }}"
          chat_id: "{{ trigger.event.data.chat_id }}"
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HAOS12 (–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞)
  - id: "telegram_bot_reboot_haos12"
    alias: "Telegram Bot Reboot HAOS12"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_haos12"
    actions:
      - service: button.press
        target:
          entity_id: button.qemu_haos12_3_100_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ LXC MariaDB
  - id: "telegram_bot_start_mariadb"
    alias: "Telegram Bot Start LXC MariaDB"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/start_mariadb"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_mariadb_101_start
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_stop_mariadb"
    alias: "Telegram Bot Stop LXC MariaDB"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/stop_mariadb"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_mariadb_101_stop
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_reboot_mariadb"
    alias: "Telegram Bot Reboot LXC MariaDB"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_mariadb"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_mariadb_101_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –ê–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è Jackett, Jellyfin, Deluge
  - id: "telegram_bot_start_jackett"
    alias: "Telegram Bot Start LXC Jackett"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/start_jackett"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jackett_102_start
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_stop_jackett"
    alias: "Telegram Bot Stop LXC Jackett"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/stop_jackett"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jackett_102_stop
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_reboot_jackett"
    alias: "Telegram Bot Reboot LXC Jackett"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_jackett"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jackett_102_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è Jellyfin –∏ Deluge

  - id: "telegram_bot_start_jellyfin"
    alias: "Telegram Bot Start LXC Jellyfin"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/start_jellyfin"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jellyfin_103_start
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_stop_jellyfin"
    alias: "Telegram Bot Stop LXC Jellyfin"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/stop_jellyfin"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jellyfin_103_stop
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_reboot_jellyfin"
    alias: "Telegram Bot Reboot LXC Jellyfin"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_jellyfin"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_jellyfin_103_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_start_deluge"
    alias: "Telegram Bot Start LXC Deluge"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/start_deluge"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_deluge_104_start
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_stop_deluge"
    alias: "Telegram Bot Stop LXC Deluge"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/stop_deluge"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_deluge_104_stop
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_reboot_deluge"
    alias: "Telegram Bot Reboot LXC Deluge"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_deluge"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_deluge_104_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_start_torrserver"
    alias: "Telegram Bot Start LXC TorrServer"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/start_torrserver"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_debian_105_start
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_stop_torrserver"
    alias: "Telegram Bot Stop LXC TorrServer"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/stop_torrserver"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_debian_105_stop
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"

  - id: "telegram_bot_reboot_torrserver"
    alias: "Telegram Bot Reboot LXC TorrServer"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/reboot_torrserver"
    actions:
      - service: button.press
        target:
          entity_id: button.lxc_debian_105_reboot
      - delay:
          seconds: 5
      - service: script.send_pve_status
        data:
          target: "{{ trigger.event.data.chat_id }}"