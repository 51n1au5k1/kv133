# packages/helper.yaml #
########################

# Этот пакет конфигураций Home Assistant обеспечивает вспомогательные функции
# для мониторинга и управления различными аспектами умного дома.
# Он включает в себя датчики для измерения размера базы данных и мониторинга
# уровней CO2, а также автоматизации для управления состоянием системы и
# климатической техникой.

# Конфигурации

# Датчики

# Maria DB size: Измеряет размер базы данных MariaDB для контроля использования
# хранилища.
# Необходимость проветривания: Активируется, когда уровень CO2 превышает
# 1000 ppm, сигнализируя о необходимости проветрить помещение.
# Статус проветривания: Показывает, достаточно ли проветрено помещение,
# активируясь при уровне CO2 ниже 550 ppm.

sensor:
  # Измерение размера базы данных MariaDB для мониторинга использования
  - platform: sql
    db_url: !secret db_link
    queries:
      - name: Maria DB size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: "value"
        unit_of_measurement: MB

  # Шаблонные датчики для мониторинга условий окружающей среды
  - platform: template
    sensors:
      # Датчик необходимости проветривания, активируется при CO2 выше 1000 ppm
      livingroom_ventilation_need:
        unique_id: livingroom_ventilation_need
        friendly_name: "Необходимость проветривания"
        value_template: >
          {% if states('sensor.co2_monitor_co2') is not none and states('sensor.co2_monitor_co2') != 'unknown' %}
            {{ 'on' if (states('sensor.co2_monitor_co2') | float) > 1000 else 'off' }}
          {% else %}
            off
          {% endif %}

      # Датчик статуса проветривания, активируется при CO2 ниже 550 ppm
      livingroom_ventilation_status:
        unique_id: livingroom_ventilation_status
        friendly_name: "Статус проветривания"
        value_template: >
          {% if states('sensor.co2_monitor_co2') is not none and states('sensor.co2_monitor_co2') != 'unknown' %}
            {{ 'on' if (states('sensor.co2_monitor_co2') | float) < 550 else 'off' }}
          {% else %}
            off
          {% endif %}

# Бинарные Датчики
# Состояние дверей: Определяет открыты ли двери на балконе для управления
# работой очистителей воздуха.
# Температура ниже 20 градусов: Сигнализирует о снижении температуры ниже
# 20 градусов в комнатах, что может потребовать дополнительного отопления.

binary_sensor:
  - platform: template
    sensors:
      # Состояние дверей для определения необходимости работы очистителя воздуха
      doors_in_kitchen_livingroom:
        unique_id: doors_in_kitchen_livingroom
        friendly_name: "Двери на балкон с гостиной"
        device_class: door
        value_template: >
          {{ is_state('binary_sensor.gostinaia_balkon_contact', 'on')
              or is_state('binary_sensor.0x00158d0003ce9922_contact', 'on') }}

      # Сенсор падения температуры ниже 20 градусов в комнатах
      temperature_below_20:
        unique_id: temperature_below_20
        friendly_name: "Температура ниже 20 градусов"
        device_class: cold
        value_template: >
          {% set temp1 = states('sensor.livingroom_climat_sensor_temperature') %}
          {% set temp2 = states('sensor.bedroom_th_sensor_temperature') %}
          {% set temp3 = states('sensor.cgllc_dove_f637_temperature_humidity_sensor') %}
          {{ (temp1 not in ['unknown', 'unavailable'] and temp1 | float(20) <= 20)
            or (temp2 not in ['unknown', 'unavailable'] and temp2 | float(20) <= 20)
            or (temp3 not in ['unknown', 'unavailable'] and temp3 | float(20) <= 20) }}

# Фиксированное значение атмосферного давления (норма для координат)
template:
  - sensor:
      - name: "Норма атмосферного давления"
        unique_id: fixed_pressure_value
        unit_of_measurement: "mmHg"
        state: 739

# Входные Булевы
# Фаза загрузки системы: Используется для определения начальной фазы работы
# системы после запуска и исключению ложного запуска автоматизаций.
# Контроль отправки сообщений о необходимости проветривания для исключения
# повторной отправки уведомления.
input_boolean:
  # Фаза загрузки системы для контроля начальной фазы работы
  system_startup_phase:
    name: "Фаза загрузки системы"
    initial: on
    icon: mdi:timer-sand

  # Сенсоры для контроля отправки уведомлений о CO2:
  # - для контроля отправки текстовых уведомлений о CO2
  co2_text_notification_sensor:
    name: "Сенсор текстовых уведомлений о CO2"
    initial: "off"
    icon: mdi:message-alert
  # - для контроля отправки голосовых уведомлений о CO2
  co2_voice_notification_sensor:
    name: "Сенсор голосовых уведомлений о CO2"
    initial: "off"
    icon: mdi:account-voice

  # Сенсор режима тишины
  silent_mode:
    name: "Режим тишины"
    initial: off
    icon: mdi:emoticon-neutral-outline

  # Сенсор необходимости включения вытяжки
  kitchen_fan_cool_down:
    name: Kitchen Fan Cool Down
    initial: off
    icon: mdi:fan-alert

  # Режим уборки в ванной
  bathroom_cleaning_mode:
    name: Режим уборки в ванной
    initial: off
    icon: mdi:broom

  # Вводные переменные для сохранения состояния устройств
  climate_pre_restart_state:
    name: "Climate Pre-Restart State"
    initial: off
  fan_pre_restart_state:
    name: "Fan Pre-Restart State"
    initial: off
  humidifier_pre_restart_state:
    name: "Humidifier Pre-Restart State"
    initial: off
  door_open_climate_pre_state:
    name: "Climate Pre-State When Door Opened"
    initial: off
  door_open_fan_pre_state:
    name: "Fan Pre-State When Door Opened"
    initial: off
  door_open_humidifier_pre_state:
    name: "Humidifier Pre-State When Door Opened"
    initial: off

# Группы
group:
  all_residents:
    name: Все Жильцы
    entities:
      - person.master
      - person.tatiana

# Автоматизации

automation:
  # Включение датчика фазы загрузки системы после старта
  - id: "38ea50fb-09bc-4d39-a771-1727ab72f265"
    alias: "Фаза загрузки системы включена"
    description: "Автоматизация для включения фазы загрузки системы при старте Home Assistant."
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.system_startup_phase

  # Отключение датчика фазы загрузки системы после старта
  - id: "03e3ffd0-4e1e-4200-b0e3-1ce6a2d77d6a"
    alias: "Вспомогательная автоматизация: Отключение датчика фазы загрузки системы после старта"
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: "00:02:00"
      - service: input_boolean.turn_off
        entity_id: input_boolean.system_startup_phase

  # Работа с режимом тишины, который устанавливается на период с 23:00 до 09:00
  - id: "cd269239-a6dd-422f-ba2a-3d57e4c5981e"
    alias: "Вспомогательная автоматизация: Установка режима тишины"
    trigger:
      platform: time
      at: "23:00:00"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.silent_mode
    mode: single

  - id: "6ed14663-ebe5-4ab3-bc3b-43e682c45f3b"
    alias: "Вспомогательная автоматизация: Снятие режима тишины"
    trigger:
      platform: time
      at: "09:00:00"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.silent_mode
    mode: single

  # Автоматизация для сброса co2_voice_notification_sensor и co2_text_notification_sensor
  - id: "1c2b8101-2ec8-44c1-99cc-4a8abf934437"
    alias: "Вспомогательная автоматизация: Сброс уведомлений о CO2"
    trigger:
      - platform: state
        entity_id:
          - input_boolean.co2_voice_notification_sensor
          - input_boolean.co2_text_notification_sensor
        to: "on"
    action:
      - delay: "00:22:00"
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.co2_voice_notification_sensor
          - input_boolean.co2_text_notification_sensor
    mode: single

  # Записываем историю состояний погоды, чтобы найти все возможные варианты для перевода
  - id: "b2b5d19a-854a-4632-842f-6437951fd4e2"
    alias: "Вспомогательная автоматизация: Логируем состояние погоды (для уточнения перевода)"
    trigger:
      - platform: state
        entity_id: weather.kvartira_133
    action:
      - service: system_log.write
        data:
          message: "Weather condition changed to {{ states('weather.kvartira_133') }}"
          level: info

  # Обновление сенсора контроля отправки уведомлений о уровне CO2
  - id: "7df1e59a-af5d-4496-be72-e687afdbf08e"
    alias: "Обновление сенсора контроля уведомлений о уровне CO2"
    trigger:
      - platform: state
        entity_id: binary_sensor.ventilation_status
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.co2_notification_sent
      - service: input_boolean.turn_off
        entity_id: input_boolean.co2_notification_sensor
    mode: single

  # Сохранение и восстановление состояний климатической техники
  - id: "5b187cde-0ad5-4132-bb68-a622dd15d6ff"
    alias: "Вспомогательная автоматизация: сохраняем состояния климатической техники"
    trigger:
      - platform: homeassistant
        event: shutdown
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: climate.konditsioner
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.climate_pre_restart_state
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.climate_pre_restart_state
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.zhimi_mb3_a5d3_switch_status
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.fan_pre_restart_state
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.fan_pre_restart_state
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.livingroom_socket_l
                state: "on"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.humidifier_pre_restart_state
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.humidifier_pre_restart_state

  - id: "457a6711-67fa-4cb2-bcab-63c0cc58e054"
    alias: "Вспомогательная автоматизация: восстановление состояний климатической техники"
    trigger:
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_climate_pre_state
                state: "on"
            sequence:
              - service: climate.turn_on
                entity_id: climate.konditsioner
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_fan_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                entity_id: switch.zhimi_mb3_a5d3_switch_status
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.door_open_humidifier_pre_state
                state: "on"
            sequence:
              - service: switch.turn_on
                entity_id: switch.livingroom_socket_l
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.door_open_climate_pre_state
          - input_boolean.door_open_fan_pre_state
          - input_boolean.door_open_humidifier_pre_state

  - id: "c49bb82a-3c5e-4890-b607-9ac26542471d"
    alias: "Выключение камеры, когда кто-то пришёл домой"
    trigger:
      - platform: state
        entity_id: group.all_residents
        to: "home"
    action:
      - service: switch.turn_off
        entity_id: switch.chuangmi_ipc019_37da_switch_status
    mode: single
