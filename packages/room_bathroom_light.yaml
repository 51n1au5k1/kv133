################################################################################
# /packages/room_bathroom_lights.yaml
################################################################################
#
# Пакет конфигураций для освещения в ванной комнате.
# Содержит настройки светильников, группы освещения и автоматизации для управления
# яркостью, реакцией на движение, режимами работы и таймерами отключения.
#
################################################################################

##############################################################################
#                                  ОСВЕЩЕНИЕ
##############################################################################
light:
  - platform: xiaomi_miio_philipslight
    name: Bathroom_spot_r1_philips
    host: !secret bathroom_spot_r1_ip
    token: !secret bathroom_spot_r1_token
    model: philips.light.downlight

  - platform: xiaomi_miio_philipslight
    name: Bathroom_spot_r2_philips
    host: !secret bathroom_spot_r2_ip
    token: !secret bathroom_spot_r2_token
    model: philips.light.downlight

  - platform: xiaomi_miio_philipslight
    name: Bathroom_spot_l1_philips
    host: !secret bathroom_spot_l1_ip
    token: !secret bathroom_spot_l1_token
    model: philips.light.downlight

  - platform: xiaomi_miio_philipslight
    name: Bathroom_spot_c1_philips
    host: !secret bathroom_spot_c1_ip
    token: !secret bathroom_spot_c1_token
    model: philips.light.downlight

  - platform: xiaomi_miio_philipslight
    name: Bathroom_spot_c2_philips
    host: !secret bathroom_spot_c2_ip
    token: !secret bathroom_spot_c2_token
    model: philips.light.downlight

##############################################################################
#                                   ГРУППЫ
##############################################################################
group:
  bathroom_all_lights:
    name: "Все светильники ванной"
    entities:
      - light.bathroom_spot_r1_philips
      - light.bathroom_spot_r2_philips
      - light.bathroom_spot_l1_philips
      - light.bathroom_spot_c1_philips
      - light.bathroom_spot_c2_philips
      - light.bathroom_relay_l2
  bathroom_spots:
    name: "Точечные светильники ванной"
    entities:
      - light.bathroom_spot_r1_philips
      - light.bathroom_spot_r2_philips
      - light.bathroom_spot_l1_philips
      - light.bathroom_spot_c1_philips
      - light.bathroom_spot_c2_philips
  bathroom_night_lights:
    name: "Ночное освещение ванной"
    entities:
      - light.bathroom_spot_l1_philips

##############################################################################
#                             ВСПОМОГАТЕЛЬНЫЕ СЕНСОРЫ
##############################################################################
binary_sensor:
  - platform: template
    sensors:
      is_night_mode:
        friendly_name: "Ночной режим освещения"
        value_template: >
          {% set t = now().strftime('%H:%M') %}
          {{ '00:30' <= t < '06:00' }}

##############################################################################
#                          НАСТРОЙКА ДЛИТЕЛЬНОСТИ ТАЙМЕРА
##############################################################################
input_number:
  bathroom_timer_duration:
    name: "Таймер ванной (мин)"
    min: 0.5
    max: 10
    step: 0.5
    initial: 3

##############################################################################
#                                ТАЙМЕРЫ
##############################################################################
timer:
  timer_bathroom:
    name: "Движение отсутствует"
    duration: "00:03:00" # Базовое значение; при старте задаём динамически

##############################################################################
#                                СКРИПТЫ
##############################################################################
script:
  bathroom_toggle_night_mode:
    alias: "Переключение ночного режима в ванной"
    sequence:
      - if:
          condition: or
          conditions:
            - condition: state
              entity_id: light.bathroom_spot_l1_philips
              state: "on"
            - condition: state
              entity_id: light.bathroom_relay_l2
              state: "on"
        then:
          - service: light.turn_off
            target:
              entity_id: group.bathroom_all_lights
        else:
          - service: light.turn_on
            target:
              entity_id: light.bathroom_spot_l1_philips
            data:
              brightness_pct: 10
          - service: timer.start
            target:
              entity_id: timer.timer_bathroom
            data:
              duration: "{{ (states('input_number.bathroom_timer_duration') | float * 60) | int }}"

  bathroom_toggle_day_mode:
    alias: "Переключение дневного режима в ванной"
    sequence:
      - if:
          condition: state
          entity_id: group.bathroom_all_lights
          state: "on"
        then:
          - service: light.turn_off
            target:
              entity_id: group.bathroom_all_lights
        else:
          - service: light.turn_on
            target:
              entity_id: light.bathroom_relay_l2
          - service: light.turn_on
            target:
              entity_id: group.bathroom_spots
            data:
              brightness_pct: 100
          - service: timer.start
            target:
              entity_id: timer.timer_bathroom
            data:
              duration: "{{ (states('input_number.bathroom_timer_duration') | float * 60) | int }}"

  bathroom_turn_on_night_mode:
    alias: "Включение ночного освещения в ванной"
    sequence:
      - service: light.turn_on
        target:
          entity_id: light.bathroom_spot_l1_philips
        data:
          brightness_pct: 10

  bathroom_turn_on_day_mode:
    alias: "Включение дневного освещения в ванной"
    sequence:
      - service: light.turn_on
        target:
          entity_id: light.bathroom_relay_l2
      - service: light.turn_on
        target:
          entity_id: group.bathroom_spots
        data:
          brightness_pct: 100

##############################################################################
#                              АВТОМАТИЗАЦИИ
##############################################################################
automation:
  # --------------------------------------------------------------------------
  # Ванная: Освещение, вкл/выкл с выключателя
  # --------------------------------------------------------------------------
  - id: "5525cbdc-3a8d-4464-908e-795c8205b40c"
    alias: "Ванная: Освещение, вкл/выкл с выключателя"
    description: "Управление светом через MQTT-выключатель (левая клавиша). Выбор дневного/ночного режима."
    mode: restart

    triggers:
      - trigger: device
        domain: mqtt
        device_id: cc6ef89720abb376a24e910e13f37902
        type: action
        subtype: single_left

    conditions:
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"

    actions:
      - if:
          condition: state
          entity_id: binary_sensor.is_night_mode
          state: "on"
        then:
          - action: script.turn_on
            target:
              entity_id: script.bathroom_toggle_night_mode
        else:
          - action: script.turn_on
            target:
              entity_id: script.bathroom_toggle_day_mode

  # --------------------------------------------------------------------------
  # Ванная: Освещение, вкл по движению / открытию двери
  # --------------------------------------------------------------------------
  - id: "0007279c-13b5-402b-9aef-bf264273fa90"
    alias: "Ванная: Освещение, вкл по движению и датчикам открытия"
    description: "Включает свет в зависимости от времени суток при движении или открытии двери."
    mode: restart

    triggers:
      - trigger: state
        entity_id: binary_sensor.bathroom_open_door
        from: "off"
        to: "on"
        for:
          seconds: 1
      - trigger: state
        entity_id: binary_sensor.bathroom_motions
        from: "off"
        to: "on"
        for:
          seconds: 1

    conditions:
      # не выполняем сценарий пока HA не загрузился
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"

      # и пока действует защита от ложных срабатываний после старта
      - condition: state
        entity_id: input_boolean.bathroom_lights_startup_protection
        state: "off"

      # в доме кто-то есть ИЛИ включён режим уборки
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.someone_is_home
            state: "on"
          - condition: state
            entity_id: input_boolean.bathroom_cleaning_mode
            state: "on"

    actions:
      - if:
          condition: state
          entity_id: binary_sensor.is_night_mode
          state: "on"
        then:
          - action: script.turn_on
            target:
              entity_id: script.bathroom_turn_on_night_mode
        else:
          - action: script.turn_on
            target:
              entity_id: script.bathroom_turn_on_day_mode

  # --------------------------------------------------------------------------
  # Ванная: Отмена таймера при обнаружении движения
  # --------------------------------------------------------------------------
  - id: "50323f55-c6dd-483a-8799-af3c57e3e363"
    alias: "Ванная: Отмена таймера при обнаружении движения"
    description: "Если снова появилось движение — отменяем таймер автоотключения света."
    mode: single

    triggers:
      - trigger: state
        entity_id: binary_sensor.bathroom_motions
        to: "on"

    conditions:
      - condition: state
        entity_id: timer.timer_bathroom
        state: "active"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"

    actions:
      - action: timer.cancel
        target:
          entity_id: timer.timer_bathroom

  # --------------------------------------------------------------------------
  # Ванная: Запуск таймера при отсутствии движения
  # --------------------------------------------------------------------------
  - id: "e519fa4c-bbad-4b0d-b06c-8521b3b10131"
    alias: "Ванная: Запуск таймера при отсутствии движения"
    description: "Если движения нет 1 минуту, запускаем таймер авто-выключения света."
    mode: restart

    triggers:
      - trigger: state
        entity_id: binary_sensor.bathroom_motions
        to: "off"
        for:
          minutes: 1

    conditions:
      - condition: state
        entity_id: group.bathroom_all_lights
        state: "on"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"

    actions:
      - action: timer.start
        target:
          entity_id: timer.timer_bathroom
        data:
          duration: "{{ (states('input_number.bathroom_timer_duration') | float * 60) | int }}"

  # --------------------------------------------------------------------------
  # Ванная: Освещение, выключение по таймеру
  # --------------------------------------------------------------------------
  - id: "b30b7ad8-6563-4279-a78f-1a113f9cb252"
    alias: "Ванная: Освещение, выключение по таймеру"
    description: "Гасим свет после истечения основного таймера, если не уборка."
    mode: single

    triggers:
      - trigger: event
        event_type: timer.finished
        event_data:
          entity_id: timer.timer_bathroom

    conditions:
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"

    actions:
      - action: light.turn_off
        target:
          entity_id: group.bathroom_all_lights

  # --------------------------------------------------------------------------
  # Ванная: Включение реле основного света при недоступности спотов
  # --------------------------------------------------------------------------
  - id: "0c5020c3-e674-4789-8086-38dbc07253d7"
    alias: "Ванная: Включение реле основного света при недоступности спотов"
    description: >
      Если 2+ точечных светильника ушли в unavailable на 30+ секунд,
      автоматически включаем основной свет и шлём уведомление.
    mode: single
    triggers:
      - trigger: state
        entity_id:
          - light.bathroom_spot_r1_philips
          - light.bathroom_spot_r2_philips
          - light.bathroom_spot_l1_philips
          - light.bathroom_spot_c1_philips
          - light.bathroom_spot_c2_philips
        to: "unavailable"
        for:
          seconds: 30

    conditions:
      # не дёргаем во время фазы старта
      - condition: state
        entity_id: input_boolean.system_startup_phase
        state: "off"

      # не дёргаем во время защиты запуска света
      - condition: state
        entity_id: input_boolean.bathroom_lights_startup_protection
        state: "off"

      # основной свет сейчас выключен (иначе нет смысла)
      - condition: state
        entity_id: light.bathroom_main
        state: "off"

      # считаем сколько спотов недоступно
      - condition: template
        value_template: >
          {% set unavailable_count =
            [ states.light.bathroom_spot_r1_philips,
              states.light.bathroom_spot_r2_philips,
              states.light.bathroom_spot_l1_philips,
              states.light.bathroom_spot_c1_philips,
              states.light.bathroom_spot_c2_philips ]
            | selectattr('state', 'eq', 'unavailable')
            | list | length %}
          {{ unavailable_count >= 2 }}

    actions:
      - action: light.turn_on
        target:
          entity_id: light.bathroom_main
      - action: notify.master
        data:
          message: "⚠️ Резервный свет включён в ванной: точечные споты недоступны."

  # --------------------------------------------------------------------------
  # Ванная: Выключение света после перезагрузки
  # --------------------------------------------------------------------------
  - id: "14a6f0ef-8217-4fc6-8dca-067875b950a7"
    alias: "Ванная: Выключение всего света после рестарта HA"
    description: >
      После старта HA ждём, и если реально никого нет в ванной — выключаем весь свет.
      (Защищает от ситуации, когда перезагрузка поймала свет во включённом состоянии.)
    mode: single
    triggers:
      - trigger: homeassistant
        event: start

    conditions: []

    actions:
      # ждём ~90 секунд (30с + 60с твоей прежней логики "нет движения минуту")
      - delay: "00:01:30"

      # теперь проверяем, что движения нет, уборка не активна
      - condition: state
        entity_id: binary_sensor.bathroom_motions
        state: "off"
      - condition: state
        entity_id: input_boolean.bathroom_cleaning_mode
        state: "off"

      - action: light.turn_off
        target:
          entity_id:
            - group.bathroom_all_lights
            - light.bathroom_main

  # --------------------------------------------------------------------------
  # Ванная: Таймер защиты при запуске
  # --------------------------------------------------------------------------
  - id: "048bc34f-9e6d-475c-84ed-0af54dedeed9"
    alias: "Ванная: Таймер защиты при запуске"
    description: >
      После рестарта HA включаем защиту bathroom_lights_startup_protection
      на 5 минут, чтобы не было ложных автозажигов и антифликера.
    mode: single
    triggers:
      - trigger: homeassistant
        event: start

    conditions: []

    actions:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.bathroom_lights_startup_protection

      - delay: "00:05:00"

      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.bathroom_lights_startup_protection
