################################################################################
# /packages/telegram_helper.yaml
################################################################################
#
# Этот пакет Home Assistant реализует интеграцию с Telegram для отправки
# различных уведомлений, обеспечивая мгновенное оповещение пользователей
# о событиях в «умном доме». Он включает:
#
# 1) Настройку telegram_bot и соответствующих notify-сервисов (master / Tatiana).
# 2) Input_text для хранения списка пользователей, находящихся дома.
#
################################################################################

# Теперь настраивается в интеграциях
# telegram_bot:
#   # ----------------------------------------------------------------------------
#   # Telegram-бот (polling).
#   # Здесь мы указываем API-ключ и список пользователей, которым разрешён доступ
#   # к боту через chat_id. Параметр parse_mode: html позволяет использовать
#   # HTML-разметку в уведомлениях (жирный шрифт, ссылки и т.д.).
#   # ----------------------------------------------------------------------------

#   - platform: polling
#     api_key: !secret api_key_bot
#     parse_mode: html
#     allowed_chat_ids:
#       - !secret chat_id_andrei

notify:
  # ----------------------------------------------------------------------------
  # Настройки сервисов уведомлений для конкретных получателей.
  # notify.master   -> отправляет сообщения в Telegram Andrei
  # group_notifications -> группа для отправки для уведомлений обоим пользователям
  # ----------------------------------------------------------------------------

  - name: master
    platform: telegram
    chat_id: !secret chat_id_andrei
  - platform: group
    name: group_notifications
    services:
      - service: master
# Отладочная автоматизация
automation:
  - id: "debug_telegram_trigger"
    alias: "DEBUG Telegram Trigger Structure"
    initial_state: true
    triggers:
      - platform: event
        event_type: telegram_command
    actions:
      - service: system_log.write
        data:
          level: warning
          message: >
            DEBUG telegram_command trigger keys:
            platform={{ trigger.platform }}
            has_event={{ trigger.event is defined }}
            event_type={{ trigger.event.event_type if trigger.event is defined else 'no-event' }}
            chat_id={{ trigger.event.data.chat_id if trigger.event is defined and trigger.event.data.chat_id is defined else 'no-chat_id' }}
            user_id={{ trigger.event.data.user_id if trigger.event is defined and trigger.event.data.user_id is defined else 'no-user_id' }}
            full_data={{ trigger.event.data if trigger.event is defined else 'no-data' }}
