################################################################################
# /packages/room_livingroom_humidifier.yaml
################################################################################
#
# Функции:
#   • Автоматическое управление увлажнителем в гостиной:
#       - Использует усреднённую влажность помещения (sensor.livingroom_average_humidity)
#       - Включает увлажнитель, если влажность < нижнего порога
#       - Выключает, если влажность > верхнего порога
#       - Работает с гистерезисом (без дёрганий)
#   • Дополнительные условия:
#       - Антидребезг (выдержка 3 минуты перед переключением)
#       - Минимальное время работы и простоя
#
################################################################################

##############################################################################
#                           ВХОДНЫЕ ПЕРЕМЕННЫЕ
##############################################################################

input_boolean:
  # Флаг включения автоматического режима
  livingroom_humidifier_auto:
    name: "Гостиная: авто-режим увлажнителя"
    icon: mdi:autorenew
    initial: true

input_number:
  # Нижний порог включения (если влажность ниже — включаем)
  livingroom_hum_low:
    name: "Гостиная: нижний порог RH (%)"
    min: 20
    max: 60
    step: 1
    initial: 45
    unit_of_measurement: "%"

  # Верхний порог выключения (если влажность выше — выключаем)
  livingroom_hum_high:
    name: "Гостиная: верхний порог RH (%)"
    min: 30
    max: 70
    step: 1
    initial: 50
    unit_of_measurement: "%"

  # Минимальное время работы (чтобы не выключать слишком рано)
  livingroom_hum_min_on_min:
    name: "Мин. время работы (мин)"
    min: 1
    max: 60
    step: 1
    initial: 10

  # Минимальное время простоя (чтобы не включать слишком часто)
  livingroom_hum_min_off_min:
    name: "Мин. время простоя (мин)"
    min: 1
    max: 60
    step: 1
    initial: 15

##############################################################################
#                               БИНАРНЫЕ СЕНСОРЫ
##############################################################################

binary_sensor:
  - platform: template
    sensors:
      livingroom_need_humidify:
        unique_id: livingroom_need_humidify
        friendly_name: "Гостиная: нужна влажность (гистерезис)"
        device_class: problem

        # Сенсор доступен только если данные по влажности корректны
        availability_template: >-
          {{ states('sensor.livingroom_average_humidity') not in ['unknown','unavailable',''] }}

        # Гистерезисная логика:
        #   если влажность < нижнего порога → ON (нужно увлажнение)
        #   если выше верхнего порога → OFF
        #   иначе держим предыдущее состояние
        # + защита от некорректных порогов (если low >= high)
        value_template: >-
          {% set rh = states('sensor.livingroom_average_humidity') | float(none) %}
          {% if rh is none %}
            {{ is_state('binary_sensor.livingroom_need_humidify','on') }}
          {% else %}
            {% set low  = states('input_number.livingroom_hum_low')  | float(45) %}
            {% set high = states('input_number.livingroom_hum_high') | float(50) %}
            {% if low >= high %}
              {% set high = low + 1 %}
            {% endif %}
            {% set was_on = is_state('binary_sensor.livingroom_need_humidify','on') %}
            {% if was_on %}
              {{ rh < high }}
            {% else %}
              {{ rh < low }}
            {% endif %}
          {% endif %}

##############################################################################
#                              АВТОМАТИЗАЦИИ
##############################################################################

automation:
  ##########################################################################
  # ВКЛЮЧЕНИЕ УВЛАЖНИТЕЛЯ
  ##########################################################################
  - id: "95170174-7e11-4acc-9dae-b575eaede9c8"
    alias: "Гостиная: включить увлажнитель (по гистерезису)"
    description: >
      Если влажность ниже нижнего порога в течение ≥3 мин → включаем увлажнитель.
      Работает только при активном авто-режиме.
    mode: single
    triggers:
      - trigger: state
        entity_id: binary_sensor.livingroom_need_humidify
        from: "off"
        to: "on"
        for:
          minutes: 3 # антидребезг (ждём стабилизации)

    conditions:
      # Автоматический режим включён
      - condition: state
        entity_id: input_boolean.livingroom_humidifier_auto
        state: "on"

      # Минимальное время простоя прошло (устойчиво учитываем рестарт HA)
      - condition: template
        value_template: >-
          {% set lc = states.humidifier.xiaomi_cn_823407205_p3.last_changed %}
          {{ is_state('humidifier.xiaomi_cn_823407205_p3','off')
             and (as_timestamp(now()) - as_timestamp(lc, as_timestamp(now()))) >
                 (states('input_number.livingroom_hum_min_off_min') | int * 60) }}

    actions:
      # Включаем увлажнитель
      - action: humidifier.turn_on
        target:
          entity_id: humidifier.xiaomi_cn_823407205_p3

  ##########################################################################
  # ВЫКЛЮЧЕНИЕ УВЛАЖНИТЕЛЯ
  ##########################################################################
  - id: "feb01173-2f87-4aec-8bba-877b685d4bf2"
    alias: "Гостиная: выключить увлажнитель (по гистерезису)"
    description: >
      Если влажность стабильно выше верхнего порога в течение ≥3 мин → выключаем увлажнитель.
      Проверяем, что устройство поработало не меньше минимального времени.
    mode: single
    triggers:
      - trigger: state
        entity_id: binary_sensor.livingroom_need_humidify
        from: "on"
        to: "off"
        for:
          minutes: 3 # антидребезг

    conditions:
      # Автоматический режим включён
      - condition: state
        entity_id: input_boolean.livingroom_humidifier_auto
        state: "on"

      # Минимальное время работы прошло (устойчиво учитываем рестарт HA)
      - condition: template
        value_template: >-
          {% set lc = states.humidifier.xiaomi_cn_823407205_p3.last_changed %}
          {{ is_state('humidifier.xiaomi_cn_823407205_p3','on')
             and (as_timestamp(now()) - as_timestamp(lc, as_timestamp(now()))) >
                 (states('input_number.livingroom_hum_min_on_min') | int * 60) }}

    actions:
      # Выключаем увлажнитель
      - action: humidifier.turn_off
        target:
          entity_id: humidifier.xiaomi_cn_823407205_p3
